/*! tsParticles Connect External Interaction v2.1.4 by Matteo Bruni */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e(require("tsparticles-engine"));else if("function"==typeof define&&define.amd)define(["tsparticles-engine"],e);else{var n="object"==typeof exports?e(require("tsparticles-engine")):e(t.window);for(var o in n)("object"==typeof exports?exports:t)[o]=n[o]}}(this,(t=>(()=>{"use strict";var e={818:e=>{e.exports=t}},n={};function o(t){var i=n[t];if(void 0!==i)return i.exports;var r=n[t]={exports:{}};return e[t](r,r.exports,o),r.exports}o.d=(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var i={};return(()=>{o.r(i),o.d(i,{loadExternalConnectInteraction:()=>r});var t=o(818);function e(e,n,o){e.canvas.draw((i=>{var r;const s=function(e,n,o,i){const r=e.actualOptions.interactivity.modes.connect;return(0,t.gradient)(n,o,i,r.links.opacity)}(e,i,n,o);if(!s)return;const a=n.getPosition(),c=o.getPosition();!function(e,n,o,i,r){e.save(),(0,t.drawLine)(e,i,r),e.lineWidth=n,e.strokeStyle=o,e.stroke(),e.restore()}(i,null!==(r=n.retina.linksWidth)&&void 0!==r?r:e.retina.linksWidth,s,a,c)}))}class n extends t.ExternalInteractorBase{constructor(t){super(t)}clear(){}init(){}async interact(){const t=this.container;if(t.actualOptions.interactivity.events.onHover.enable&&"mousemove"===t.interactivity.status){const n=t.interactivity.mouse.position;if(!n)return;const o=Math.abs(t.retina.connectModeRadius),i=t.particles.quadTree.queryCircle(n,o,(t=>this.isEnabled(t)));let r=0;for(const n of i){const o=n.getPosition();for(const s of i.slice(r+1)){const i=s.getPosition(),r=Math.abs(t.retina.connectModeDistance),a=Math.abs(o.x-i.x),c=Math.abs(o.y-i.y);a<r&&c<r&&e(t,n,s)}++r}}}isEnabled(e){var n;const o=this.container,i=o.interactivity.mouse,r=(null!==(n=null==e?void 0:e.interactivity)&&void 0!==n?n:o.actualOptions.interactivity).events;return!(!r.onHover.enable||!i.position)&&(0,t.isInArray)("connect",r.onHover.mode)}reset(){}}async function r(t){await t.addInteractor("externalConnect",(t=>new n(t)))}})(),i})()));