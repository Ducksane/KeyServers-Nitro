/*! tsParticles Grab External Interaction v2.1.4 by Matteo Bruni */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("tsparticles-engine"));else if("function"==typeof define&&define.amd)define(["tsparticles-engine"],t);else{var n="object"==typeof exports?t(require("tsparticles-engine")):t(e.window);for(var o in n)("object"==typeof exports?exports:e)[o]=n[o]}}(this,(e=>(()=>{"use strict";var t={818:t=>{t.exports=e}},n={};function o(e){var r=n[e];if(void 0!==r)return r.exports;var i=n[e]={exports:{}};return t[e](i,i.exports,o),i.exports}o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};return(()=>{o.r(r),o.d(r,{loadExternalGrabInteraction:()=>i});var e=o(818);function t(t,n,o,r,i){t.canvas.draw((a=>{var s;const c=n.getPosition();!function(t,n,o,r,i,a){t.save(),(0,e.drawLine)(t,o,r),t.strokeStyle=(0,e.getStyleFromRgb)(i,a),t.lineWidth=n,t.stroke(),t.restore()}(a,null!==(s=n.retina.linksWidth)&&void 0!==s?s:t.retina.linksWidth,c,i,o,r)}))}class n extends e.ExternalInteractorBase{constructor(e){super(e)}clear(){}init(){}async interact(){var n;const o=this.container,r=o.actualOptions,i=r.interactivity;if(!i.events.onHover.enable||o.interactivity.status!==e.mouseMoveEvent)return;const a=o.interactivity.mouse.position;if(!a)return;const s=o.retina.grabModeDistance,c=o.particles.quadTree.queryCircle(a,s,(e=>this.isEnabled(e)));for(const l of c){const c=l.getPosition(),u=(0,e.getDistance)(c,a);if(u>s)continue;const d=i.modes.grab.links,p=d.opacity,v=p-u*p/s;if(v<=0)continue;const f=null!==(n=d.color)&&void 0!==n?n:l.options.links.color;if(!o.particles.grabLineColor){const t=r.interactivity.modes.grab.links;o.particles.grabLineColor=(0,e.getLinkRandomColor)(f,t.blink,t.consent)}const y=(0,e.getLinkColor)(l,void 0,o.particles.grabLineColor);if(!y)return;t(o,l,y,v,a)}}isEnabled(t){var n;const o=this.container,r=o.interactivity.mouse,i=(null!==(n=null==t?void 0:t.interactivity)&&void 0!==n?n:o.actualOptions.interactivity).events;return i.onHover.enable&&!!r.position&&(0,e.isInArray)("grab",i.onHover.mode)}reset(){}}async function i(e){await e.addInteractor("externalGrab",(e=>new n(e)))}})(),r})()));