{"ast":null,"code":"import _slicedToArray from\"C:/Users/Administrator/Desktop/nitro/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _excluded=[\"onKeyDown\"];function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}/* eslint-disable jsx-a11y/no-static-element-interactions */ /* eslint-disable jsx-a11y/anchor-has-content */import*as React from'react';import{useEventCallback}from'@restart/hooks';import{useButtonProps}from'./Button';import{jsx as _jsx}from\"react/jsx-runtime\";export function isTrivialHref(href){return!href||href.trim()==='#';}/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */var Anchor=/*#__PURE__*/React.forwardRef(function(_ref,ref){var onKeyDown=_ref.onKeyDown,props=_objectWithoutPropertiesLoose(_ref,_excluded);var _useButtonProps=useButtonProps(Object.assign({tagName:'a'},props)),_useButtonProps2=_slicedToArray(_useButtonProps,1),buttonProps=_useButtonProps2[0];var handleKeyDown=useEventCallback(function(e){buttonProps.onKeyDown(e);onKeyDown==null?void 0:onKeyDown(e);});if(isTrivialHref(props.href)&&!props.role||props.role==='button'){return/*#__PURE__*/_jsx(\"a\",Object.assign({ref:ref},props,buttonProps,{onKeyDown:handleKeyDown}));}return/*#__PURE__*/_jsx(\"a\",Object.assign({ref:ref},props,{onKeyDown:onKeyDown}));});Anchor.displayName='Anchor';export default Anchor;","map":null,"metadata":{},"sourceType":"module"}