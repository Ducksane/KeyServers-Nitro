{"ast":null,"code":"import _slicedToArray from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _createForOfIteratorHelper from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _classCallCheck from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";import{RoomMapMaskData}from'./RoomMapMaskData';import{RoomPlaneBitmapMaskData}from'./RoomPlaneBitmapMaskData';export var RoomPlaneBitmapMaskParser=/*#__PURE__*/function(){function RoomPlaneBitmapMaskParser(){_classCallCheck(this,RoomPlaneBitmapMaskParser);this._masks=void 0;this._masks=new Map();}_createClass(RoomPlaneBitmapMaskParser,[{key:\"maskCount\",get:function get(){return this._masks.size;}},{key:\"dispose\",value:function dispose(){if(this._masks){this.reset();this._masks=null;}}},{key:\"initialize\",value:function initialize(k){if(!k)return false;this._masks.clear();if(k.masks.length){var _iterator=_createForOfIteratorHelper(k.masks),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var mask=_step.value;if(!mask)continue;var location=mask.locations.length?mask.locations[0]:null;if(!location)continue;this._masks.set(mask.id,new RoomPlaneBitmapMaskData(mask.type,location,mask.category));}}catch(err){_iterator.e(err);}finally{_iterator.f();}}return true;}},{key:\"reset\",value:function reset(){var _iterator2=_createForOfIteratorHelper(this._masks.values()),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var mask=_step2.value;if(!mask)continue;mask.dispose();}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}this._masks.clear();}},{key:\"addMask\",value:function addMask(k,_arg_2,_arg_3,_arg_4){var mask=new RoomPlaneBitmapMaskData(_arg_2,_arg_3,_arg_4);this._masks.delete(k);this._masks.set(k,mask);}},{key:\"removeMask\",value:function removeMask(k){var existing=this._masks.get(k);if(existing){this._masks.delete(k);existing.dispose();return true;}return false;}},{key:\"getXML\",value:function getXML(){var data=new RoomMapMaskData();var _iterator3=_createForOfIteratorHelper(this._masks.entries()),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _step3$value=_slicedToArray(_step3.value,2),key=_step3$value[0],mask=_step3$value[1];if(!mask)continue;var type=this.getMaskType(mask);var category=this.getMaskCategory(mask);var location=this.getMaskLocation(mask);if(type&&category&&location){var newMask={id:key,type:type,category:category,locations:[{x:location.x,y:location.y,z:location.z}]};data.masks.push(newMask);}}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}return data;}},{key:\"getMaskLocation\",value:function getMaskLocation(mask){if(!mask)return null;return mask.loc;}},{key:\"getMaskType\",value:function getMaskType(mask){if(!mask)return null;return mask.type;}},{key:\"getMaskCategory\",value:function getMaskCategory(mask){if(!mask)return null;return mask.category;}},{key:\"masks\",get:function get(){return this._masks;}}]);return RoomPlaneBitmapMaskParser;}();","map":null,"metadata":{},"sourceType":"module"}