{"ast":null,"code":"/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */function createChainedFunction(){for(var _len=arguments.length,funcs=new Array(_len),_key=0;_key<_len;_key++){funcs[_key]=arguments[_key];}return funcs.filter(function(f){return f!=null;}).reduce(function(acc,f){if(typeof f!=='function'){throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');}if(acc===null)return f;return function chainedFunction(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}// @ts-ignore\nacc.apply(this,args);// @ts-ignore\nf.apply(this,args);};},null);}export default createChainedFunction;","map":null,"metadata":{},"sourceType":"module"}