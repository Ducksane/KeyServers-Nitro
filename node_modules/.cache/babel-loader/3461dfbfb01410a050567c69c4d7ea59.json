{"ast":null,"code":"import _slicedToArray from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import*as React from'react';import{useReducer,useRef,useEffect}from'react';var ReactSharedInternals=React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;var ReactCurrentDispatcher=ReactSharedInternals.ReactCurrentDispatcher;var useForceUpdate=function useForceUpdate(){return useReducer(function(){return{};})[1];};var notImplemented=function notImplemented(name){return function(){var msg=\"Hook \\\"\".concat(name,\"\\\" no possible to using inside useBetween scope.\");console.error(msg);throw new Error(msg);};};var equals=function equals(a,b){return Object.is(a,b);};var shouldUpdate=function shouldUpdate(a,b){return!a||!b||a.length!==b.length||a.some(function(dep,index){return!equals(dep,b[index]);});};var detectServer=function detectServer(){return typeof window==='undefined';};var instances=new Map();var boxes=[];var pointer=0;var useEffectQueue=[];var useLayoutEffectQueue=[];var nextTick=function nextTick(){};var isServer=detectServer();var initialData=undefined;var nextBox=function nextBox(){var index=pointer++;return boxes[index]=boxes[index]||{};};var ownDisptacher={useState:function useState(initialState){var box=nextBox();var tick=nextTick;if(!box.initialized){box.state=typeof initialState===\"function\"?initialState():initialState;box.set=function(fn){if(typeof fn==='function'){return box.set(fn(box.state));}if(!equals(fn,box.state)){box.state=fn;tick();}};box.initialized=true;}return[box.state,box.set];},useReducer:function useReducer(reducer,initialState,init){var box=nextBox();var tick=nextTick;if(!box.initialized){box.state=init?init(initialState):initialState;box.dispatch=function(action){var state=reducer(box.state,action);if(!equals(state,box.state)){box.state=state;tick();}};box.initialized=true;}return[box.state,box.dispatch];},useEffect:function useEffect(fn,deps){if(isServer)return;var box=nextBox();if(!box.initialized){box.deps=deps;box.initialized=true;useEffectQueue.push([box,deps,fn]);}else if(shouldUpdate(box.deps,deps)){box.deps=deps;useEffectQueue.push([box,deps,fn]);}},useLayoutEffect:function useLayoutEffect(fn,deps){if(isServer)return;var box=nextBox();if(!box.initialized){box.deps=deps;box.initialized=true;useLayoutEffectQueue.push([box,deps,fn]);}else if(shouldUpdate(box.deps,deps)){box.deps=deps;useLayoutEffectQueue.push([box,deps,fn]);}},useCallback:function useCallback(fn,deps){var box=nextBox();if(!box.initialized){box.fn=fn;box.deps=deps;box.initialized=true;}else if(shouldUpdate(box.deps,deps)){box.deps=deps;box.fn=fn;}return box.fn;},useMemo:function useMemo(fn,deps){var box=nextBox();if(!box.initialized){box.deps=deps;box.state=fn();box.initialized=true;}else if(shouldUpdate(box.deps,deps)){box.deps=deps;box.state=fn();}return box.state;},useRef:function useRef(initialValue){var box=nextBox();if(!box.initialized){box.state={current:initialValue};box.initialized=true;}return box.state;},useImperativeHandle:function useImperativeHandle(ref,fn,deps){if(isServer)return;var box=nextBox();if(!box.initialized){box.deps=deps;box.initialized=true;useLayoutEffectQueue.push([box,deps,function(){typeof ref==='function'?ref(fn()):ref.current=fn();}]);}else if(shouldUpdate(box.deps,deps)){box.deps=deps;useLayoutEffectQueue.push([box,deps,function(){typeof ref==='function'?ref(fn()):ref.current=fn();}]);}}};['readContext','useContext','useDebugValue','useResponder','useDeferredValue','useTransition'].forEach(function(key){return ownDisptacher[key]=notImplemented(key);});var factory=function factory(hook,options){var scopedBoxes=[];var syncs=[];var state=undefined;var _unsubs=[];var mocked=false;if(options&&options.mock){state=options.mock;mocked=true;}var sync=function sync(){syncs.slice().forEach(function(fn){return fn();});};var tick=function tick(){if(mocked)return;var originDispatcher=ReactCurrentDispatcher.current;var originState=[pointer,useEffectQueue,useLayoutEffectQueue,boxes,nextTick];var tickAgain=false;var tickBody=true;pointer=0;useEffectQueue=[];useLayoutEffectQueue=[];boxes=scopedBoxes;nextTick=function nextTick(){if(tickBody){tickAgain=true;}else{tick();}};ReactCurrentDispatcher.current=ownDisptacher;state=hook(initialData);[useLayoutEffectQueue,useEffectQueue].forEach(function(queue){return queue.forEach(function(_ref){var _ref2=_slicedToArray(_ref,3),box=_ref2[0],deps=_ref2[1],fn=_ref2[2];box.deps=deps;if(box.unsub){var _unsub=box.unsub;_unsubs=_unsubs.filter(function(fn){return fn!==_unsub;});_unsub();}var unsub=fn();if(typeof unsub===\"function\"){_unsubs.push(unsub);box.unsub=unsub;}else{box.unsub=null;}});});pointer=originState[0];useEffectQueue=originState[1];useLayoutEffectQueue=originState[2];boxes=originState[3];nextTick=originState[4];ReactCurrentDispatcher.current=originDispatcher;tickBody=false;if(!tickAgain){sync();return;}tick();};var sub=function sub(fn){syncs.push(fn);};var unsub=function unsub(fn){syncs=syncs.filter(function(f){return f!==fn;});};var mock=function mock(obj){mocked=true;state=obj;sync();};var unmock=function unmock(){mocked=false;tick();};return{init:function init(){return tick();},get:function get(){return state;},sub:sub,unsub:unsub,unsubs:function unsubs(){return _unsubs;},mock:mock,unmock:unmock};};var getInstance=function getInstance(hook){var inst=instances.get(hook);if(!inst){inst=factory(hook);instances.set(hook,inst);inst.init();}return inst;};var useBetween=function useBetween(hook){var forceUpdate=useForceUpdate();var inst=getInstance(hook);var instRef=useRef();if(!equals(instRef.current,inst)){instRef.current=inst;inst.sub(forceUpdate);}useEffect(function(){return function(){return inst.unsub(forceUpdate);};},[inst]);return inst.get();};var useInitial=function useInitial(data,server){var ref=useRef();if(!ref.current){isServer=typeof server==='undefined'?detectServer():server;isServer&&clear();initialData=data;ref.current=1;}};var mock=function mock(hook,state){var inst=instances.get(hook);if(inst)inst.mock(state);else{inst=factory(hook,{mock:state});instances.set(hook,inst);}return inst.unmock;};var get=function get(hook){return getInstance(hook).get();};var free=function free(){for(var _len=arguments.length,hooks=new Array(_len),_key=0;_key<_len;_key++){hooks[_key]=arguments[_key];}if(!hooks.length){hooks=[];instances.forEach(function(_instance,hook){return hooks.push(hook);});}var inst;hooks.forEach(function(hook){return(inst=instances.get(hook))&&inst.unsubs().slice().forEach(function(fn){return fn();});});hooks.forEach(function(hook){return instances.delete(hook);});};var clear=function clear(){return instances.clear();};var on=function on(hook,fn){var inst=getInstance(hook);var listener=function listener(){return fn(inst.get());};inst.sub(listener);return function(){return inst.unsub(listener);};};export{clear,free,get,mock,on,useBetween,useInitial};","map":null,"metadata":{},"sourceType":"module"}