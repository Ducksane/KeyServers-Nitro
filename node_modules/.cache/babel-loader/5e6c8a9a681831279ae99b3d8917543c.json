{"ast":null,"code":"import _objectSpread from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"bsPrefix\",\"className\",\"transition\",\"show\",\"animation\",\"delay\",\"autohide\",\"onClose\",\"bg\"];import*as React from'react';import{useEffect,useMemo,useRef,useCallback}from'react';import classNames from'classnames';import useTimeout from'@restart/hooks/useTimeout';import ToastFade from'./ToastFade';import ToastHeader from'./ToastHeader';import ToastBody from'./ToastBody';import{useBootstrapPrefix}from'./ThemeProvider';import ToastContext from'./ToastContext';import{jsx as _jsx}from\"react/jsx-runtime\";var Toast=/*#__PURE__*/React.forwardRef(function(_ref,ref){var bsPrefix=_ref.bsPrefix,className=_ref.className,_ref$transition=_ref.transition,Transition=_ref$transition===void 0?ToastFade:_ref$transition,_ref$show=_ref.show,show=_ref$show===void 0?true:_ref$show,_ref$animation=_ref.animation,animation=_ref$animation===void 0?true:_ref$animation,_ref$delay=_ref.delay,delay=_ref$delay===void 0?5000:_ref$delay,_ref$autohide=_ref.autohide,autohide=_ref$autohide===void 0?false:_ref$autohide,onClose=_ref.onClose,bg=_ref.bg,props=_objectWithoutProperties(_ref,_excluded);bsPrefix=useBootstrapPrefix(bsPrefix,'toast');// We use refs for these, because we don't want to restart the autohide\n// timer in case these values change.\nvar delayRef=useRef(delay);var onCloseRef=useRef(onClose);useEffect(function(){delayRef.current=delay;onCloseRef.current=onClose;},[delay,onClose]);var autohideTimeout=useTimeout();var autohideToast=!!(autohide&&show);var autohideFunc=useCallback(function(){if(autohideToast){onCloseRef.current==null?void 0:onCloseRef.current();}},[autohideToast]);useEffect(function(){// Only reset timer if show or autohide changes.\nautohideTimeout.set(autohideFunc,delayRef.current);},[autohideTimeout,autohideFunc]);var toastContext=useMemo(function(){return{onClose:onClose};},[onClose]);var hasAnimation=!!(Transition&&animation);var toast=/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({},props),{},{ref:ref,className:classNames(bsPrefix,className,bg&&\"bg-\".concat(bg),!hasAnimation&&(show?'show':'hide')),role:\"alert\",\"aria-live\":\"assertive\",\"aria-atomic\":\"true\"}));return/*#__PURE__*/_jsx(ToastContext.Provider,{value:toastContext,children:hasAnimation&&Transition?/*#__PURE__*/_jsx(Transition,{in:show,unmountOnExit:true,children:toast}):toast});});Toast.displayName='Toast';export default Object.assign(Toast,{Body:ToastBody,Header:ToastHeader});","map":null,"metadata":{},"sourceType":"module"}