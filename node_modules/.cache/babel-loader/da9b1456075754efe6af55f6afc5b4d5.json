{"ast":null,"code":"/* eslint-disable no-return-assign */import canUseDOM from'./canUseDOM';export var optionsSupported=false;export var onceSupported=false;try{var options={get passive(){return optionsSupported=true;},get once(){// eslint-disable-next-line no-multi-assign\nreturn onceSupported=optionsSupported=true;}};if(canUseDOM){window.addEventListener('test',options,options);window.removeEventListener('test',options,true);}}catch(e){/* */}/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */function addEventListener(node,eventName,handler,options){if(options&&typeof options!=='boolean'&&!onceSupported){var once=options.once,capture=options.capture;var wrappedHandler=handler;if(!onceSupported&&once){wrappedHandler=handler.__once||function onceHandler(event){this.removeEventListener(eventName,onceHandler,capture);handler.call(this,event);};handler.__once=wrappedHandler;}node.addEventListener(eventName,wrappedHandler,optionsSupported?options:capture);}node.addEventListener(eventName,handler,options);}export default addEventListener;","map":null,"metadata":{},"sourceType":"module"}