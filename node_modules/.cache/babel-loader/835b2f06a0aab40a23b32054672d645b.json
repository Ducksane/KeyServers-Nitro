{"ast":null,"code":"import{useEffect,useRef}from'react';/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */export default function usePrevious(value){var ref=useRef(null);useEffect(function(){ref.current=value;});return ref.current;}","map":null,"metadata":{},"sourceType":"module"}