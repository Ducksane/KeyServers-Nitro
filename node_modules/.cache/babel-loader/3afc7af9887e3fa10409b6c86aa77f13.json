{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _classCallCheck from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";import{Graphics}from'@pixi/graphics';import{Vector3d}from'../../../../../../../room/utils/Vector3d';import{PlaneVisualizationAnimationLayer}from'../animated/PlaneVisualizationAnimationLayer';import{PlaneVisualizationLayer}from'./PlaneVisualizationLayer';export var PlaneVisualization=/*#__PURE__*/function(){function PlaneVisualization(size,totalLayers,geometry){_classCallCheck(this,PlaneVisualization);this._layers=void 0;this._geometry=void 0;this._cachedBitmapData=void 0;this._cachedBitmapNormal=void 0;this._isCached=void 0;this._hasAnimationLayers=void 0;this._layers=[];this._geometry=geometry;this._cachedBitmapData=null;this._cachedBitmapNormal=new Vector3d();this._isCached=false;this._hasAnimationLayers=false;if(totalLayers<0)totalLayers=0;var index=0;while(index<totalLayers){this._layers.push(null);index++;}}_createClass(PlaneVisualization,[{key:\"geometry\",get:function get(){return this._geometry;}},{key:\"hasAnimationLayers\",get:function get(){return this._hasAnimationLayers;}},{key:\"dispose\",value:function dispose(){if(this._layers&&this._layers.length){var _iterator=_createForOfIteratorHelper(this._layers),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var layer=_step.value;if(!layer)continue;layer.dispose();}}catch(err){_iterator.e(err);}finally{_iterator.f();}this._layers=null;}this._geometry=null;if(this._cachedBitmapData){this._cachedBitmapData.destroy();this._cachedBitmapData=null;}if(this._cachedBitmapNormal)this._cachedBitmapNormal=null;}},{key:\"clearCache\",value:function clearCache(){if(!this._isCached)return;if(this._cachedBitmapData){this._cachedBitmapData.destroy();this._cachedBitmapData=null;}if(this._cachedBitmapNormal){this._cachedBitmapNormal.assign(new Vector3d());}if(this._layers&&this._layers.length){var _iterator2=_createForOfIteratorHelper(this._layers),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var layer=_step2.value;if(!layer)continue;var planeLayer=layer;planeLayer.clearCache();}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}this._isCached=false;}},{key:\"setLayer\",value:function setLayer(layerId,material,color,align){var offset=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;if(layerId<0||layerId>this._layers.length)return false;var layer=this._layers[layerId];if(layer)layer.dispose();layer=new PlaneVisualizationLayer(material,color,align,offset);this._layers[layerId]=layer;return true;}},{key:\"setAnimationLayer\",value:function setAnimationLayer(layerId,animationItems,collection){if(layerId<0||layerId>this._layers.length)return false;var layer=this._layers[layerId];if(layer)layer.dispose();layer=new PlaneVisualizationAnimationLayer(animationItems,collection);this._layers[layerId]=layer;this._hasAnimationLayers=true;return true;}},{key:\"getLayers\",value:function getLayers(){return this._layers;}},{key:\"render\",value:function render(canvas,width,height,normal,useTexture){var offsetX=arguments.length>5&&arguments[5]!==undefined?arguments[5]:0;var offsetY=arguments.length>6&&arguments[6]!==undefined?arguments[6]:0;var maxX=arguments.length>7&&arguments[7]!==undefined?arguments[7]:0;var maxY=arguments.length>8&&arguments[8]!==undefined?arguments[8]:0;var dimensionX=arguments.length>9&&arguments[9]!==undefined?arguments[9]:0;var dimensionY=arguments.length>10&&arguments[10]!==undefined?arguments[10]:0;var timeSinceStartMs=arguments.length>11&&arguments[11]!==undefined?arguments[11]:0;if(width<1)width=1;if(height<1)height=1;if(!canvas||canvas.width!==width||canvas.height!==height)canvas=null;if(this._cachedBitmapData){if(this._cachedBitmapData.width===width&&this._cachedBitmapData.height===height&&Vector3d.isEqual(this._cachedBitmapNormal,normal)){if(!this.hasAnimationLayers){if(canvas){canvas.addChild(this._cachedBitmapData);return canvas;// const texture = TextureUtils.generateTexture(this._cachedBitmapData, new Rectangle(0, 0, width, height));\n// if(texture)\n// {\n//     canvas\n//         .beginTextureFill({ texture })\n//         .drawRect(0, 0, texture.width, texture.height)\n//         .endFill();\n//     return canvas;\n// }\n}return this._cachedBitmapData;}}else{this._cachedBitmapData.destroy();this._cachedBitmapData=null;}}this._isCached=true;if(!this._cachedBitmapData){this._cachedBitmapData=new Graphics().beginFill(0xFFFFFF).drawRect(0,0,width,height).endFill();}else{this._cachedBitmapData.beginFill(0xFFFFFF).drawRect(0,0,width,height).endFill();}if(!canvas)canvas=this._cachedBitmapData;this._cachedBitmapNormal.assign(normal);if(this._layers&&this._layers.length){var _iterator3=_createForOfIteratorHelper(this._layers),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var layer=_step3.value;if(!layer)continue;if(layer instanceof PlaneVisualizationLayer){layer.render(canvas,width,height,normal,useTexture,offsetX,offsetY);}else if(layer instanceof PlaneVisualizationAnimationLayer){layer.render(canvas,width,height,normal,offsetX,offsetY,maxX,maxY,dimensionX,dimensionY,timeSinceStartMs);}}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}if(canvas&&canvas!==this._cachedBitmapData){this._cachedBitmapData.addChild(canvas.clone());// const texture = TextureUtils.generateTexture(canvas, new Rectangle(0, 0, canvas.width, canvas.height));\n// this._cachedBitmapData\n//     .beginTextureFill({ texture })\n//     .drawRect(0, 0, canvas.width, canvas.height)\n//     .endFill();\nreturn canvas;}return this._cachedBitmapData;}}]);return PlaneVisualization;}();","map":null,"metadata":{},"sourceType":"module"}