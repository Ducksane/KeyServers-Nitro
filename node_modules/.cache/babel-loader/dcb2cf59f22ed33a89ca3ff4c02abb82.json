{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _classCallCheck from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import{GeometryItem}from'./GeometryItem';import{Node3D}from'./Node3D';export var GeometryBodyPart=/*#__PURE__*/function(_Node3D){_inherits(GeometryBodyPart,_Node3D);var _super=_createSuper(GeometryBodyPart);function GeometryBodyPart(k){var _this;_classCallCheck(this,GeometryBodyPart);_this=_super.call(this,parseFloat(k.x),parseFloat(k.y),parseFloat(k.z));_this._id=void 0;_this._radius=void 0;_this._parts=void 0;_this._dynamicParts=void 0;_this._id=k.id;_this._radius=parseFloat(k.radius);_this._parts=new Map();_this._dynamicParts=new Map();if(k.items&&k.items.length>0){var _iterator=_createForOfIteratorHelper(k.items),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var item=_step.value;if(!item)continue;var geometryItem=new GeometryItem(item);_this._parts.set(geometryItem.id,geometryItem);}}catch(err){_iterator.e(err);}finally{_iterator.f();}}return _this;}_createClass(GeometryBodyPart,[{key:\"getDynamicParts\",value:function getDynamicParts(k){var existing=this._dynamicParts.get(k);var parts=[];if(existing){for(var _index in existing){var item=existing[_index];if(!item)continue;parts.push(item);}}return parts;}},{key:\"getPartIds\",value:function getPartIds(k){var ids=[];var _iterator2=_createForOfIteratorHelper(this._parts.values()),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _part=_step2.value;if(!_part)continue;ids.push(_part.id);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}if(k){var existing=this._dynamicParts.get(k);if(existing){for(var _index2 in existing){var part=existing[_index2];if(!part)continue;ids.push(part.id);}}}return ids;}},{key:\"removeDynamicParts\",value:function removeDynamicParts(k){this._dynamicParts.delete(k);return true;}},{key:\"addPart\",value:function addPart(k,_arg_2){if(this.hasPart(k.id,_arg_2))return false;var existing=this._dynamicParts.get(_arg_2);if(!existing){existing={};this._dynamicParts.set(_arg_2,existing);}existing[k.id]=new GeometryItem(k,true);return true;}},{key:\"hasPart\",value:function hasPart(k,_arg_2){var existingPart=this._parts.get(k)||null;if(!existingPart&&this._dynamicParts.get(_arg_2)!==undefined){existingPart=this._dynamicParts.get(_arg_2)[k]||null;}return existingPart!==null;}},{key:\"getParts\",value:function getParts(k,_arg_2,_arg_3,_arg_4){var parts=[];var _iterator3=_createForOfIteratorHelper(this._parts.values()),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _part3=_step3.value;if(!_part3)continue;_part3.applyTransform(k);parts.push([_part3.getDistance(_arg_2),_part3]);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}var existingDynamic=this._dynamicParts.get(_arg_4);if(existingDynamic){for(var _index3 in existingDynamic){var part=existingDynamic[_index3];if(!part)continue;part.applyTransform(k);parts.push([part.getDistance(_arg_2),part]);}}parts.sort(function(a,b){var partA=a[0];var partB=b[0];if(partA<partB)return-1;if(partA>partB)return 1;return 0;});var partIds=[];for(var _i=0,_parts=parts;_i<_parts.length;_i++){var _part2=_parts[_i];if(!_part2)continue;partIds.push(_part2[1].id);}return partIds;}},{key:\"getDistance\",value:function getDistance(k){var _local_2=Math.abs(k.z-this.transformedLocation.z-this._radius);var _local_3=Math.abs(k.z-this.transformedLocation.z+this._radius);return Math.min(_local_2,_local_3);}},{key:\"id\",get:function get(){return this._id;}},{key:\"radius\",get:function get(){return this._radius;}}]);return GeometryBodyPart;}(Node3D);","map":null,"metadata":{},"sourceType":"module"}