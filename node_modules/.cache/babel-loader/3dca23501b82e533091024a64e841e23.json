{"ast":null,"code":"import _slicedToArray from\"C:/Users/Administrator/Desktop/nitro/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectWithoutProperties from\"C:/Users/Administrator/Desktop/nitro/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _objectSpread from\"C:/Users/Administrator/Desktop/nitro/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";var _excluded=[\"bsPrefix\",\"className\",\"style\",\"dialogClassName\",\"contentClassName\",\"children\",\"dialogAs\",\"aria-labelledby\",\"aria-describedby\",\"aria-label\",\"show\",\"animation\",\"backdrop\",\"keyboard\",\"onEscapeKeyDown\",\"onShow\",\"onHide\",\"container\",\"autoFocus\",\"enforceFocus\",\"restoreFocus\",\"restoreFocusOptions\",\"onEntered\",\"onExit\",\"onExiting\",\"onEnter\",\"onEntering\",\"onExited\",\"backdropClassName\",\"manager\"];import classNames from'classnames';import addEventListener from'dom-helpers/addEventListener';import canUseDOM from'dom-helpers/canUseDOM';import ownerDocument from'dom-helpers/ownerDocument';import removeEventListener from'dom-helpers/removeEventListener';import getScrollbarSize from'dom-helpers/scrollbarSize';import useCallbackRef from'@restart/hooks/useCallbackRef';import useEventCallback from'@restart/hooks/useEventCallback';import useMergedRefs from'@restart/hooks/useMergedRefs';import useWillUnmount from'@restart/hooks/useWillUnmount';import transitionEnd from'dom-helpers/transitionEnd';import*as React from'react';import{useCallback,useMemo,useRef,useState}from'react';import BaseModal from'@restart/ui/Modal';import{getSharedManager}from'./BootstrapModalManager';import Fade from'./Fade';import ModalBody from'./ModalBody';import ModalContext from'./ModalContext';import ModalDialog from'./ModalDialog';import ModalFooter from'./ModalFooter';import ModalHeader from'./ModalHeader';import ModalTitle from'./ModalTitle';import{useBootstrapPrefix,useIsRTL}from'./ThemeProvider';import{jsx as _jsx}from\"react/jsx-runtime\";var defaultProps={show:false,backdrop:true,keyboard:true,autoFocus:true,enforceFocus:true,restoreFocus:true,animation:true,dialogAs:ModalDialog};/* eslint-disable no-use-before-define, react/no-multi-comp */function DialogTransition(props){return/*#__PURE__*/_jsx(Fade,_objectSpread(_objectSpread({},props),{},{timeout:null}));}function BackdropTransition(props){return/*#__PURE__*/_jsx(Fade,_objectSpread(_objectSpread({},props),{},{timeout:null}));}/* eslint-enable no-use-before-define */var Modal=/*#__PURE__*/React.forwardRef(function(_ref,ref){var bsPrefix=_ref.bsPrefix,className=_ref.className,style=_ref.style,dialogClassName=_ref.dialogClassName,contentClassName=_ref.contentClassName,children=_ref.children,Dialog=_ref.dialogAs,ariaLabelledby=_ref['aria-labelledby'],ariaDescribedby=_ref['aria-describedby'],ariaLabel=_ref['aria-label'],show=_ref.show,animation=_ref.animation,backdrop=_ref.backdrop,keyboard=_ref.keyboard,onEscapeKeyDown=_ref.onEscapeKeyDown,onShow=_ref.onShow,onHide=_ref.onHide,container=_ref.container,autoFocus=_ref.autoFocus,enforceFocus=_ref.enforceFocus,restoreFocus=_ref.restoreFocus,restoreFocusOptions=_ref.restoreFocusOptions,onEntered=_ref.onEntered,onExit=_ref.onExit,onExiting=_ref.onExiting,onEnter=_ref.onEnter,onEntering=_ref.onEntering,onExited=_ref.onExited,backdropClassName=_ref.backdropClassName,propsManager=_ref.manager,props=_objectWithoutProperties(_ref,_excluded);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),modalStyle=_useState2[0],setStyle=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),animateStaticModal=_useState4[0],setAnimateStaticModal=_useState4[1];var waitingForMouseUpRef=useRef(false);var ignoreBackdropClickRef=useRef(false);var removeStaticModalAnimationRef=useRef(null);var _useCallbackRef=useCallbackRef(),_useCallbackRef2=_slicedToArray(_useCallbackRef,2),modal=_useCallbackRef2[0],setModalRef=_useCallbackRef2[1];var mergedRef=useMergedRefs(ref,setModalRef);var handleHide=useEventCallback(onHide);var isRTL=useIsRTL();bsPrefix=useBootstrapPrefix(bsPrefix,'modal');var modalContext=useMemo(function(){return{onHide:handleHide};},[handleHide]);function getModalManager(){if(propsManager)return propsManager;return getSharedManager({isRTL:isRTL});}function updateDialogStyle(node){if(!canUseDOM)return;var containerIsOverflowing=getModalManager().getScrollbarWidth()>0;var modalIsOverflowing=node.scrollHeight>ownerDocument(node).documentElement.clientHeight;setStyle({paddingRight:containerIsOverflowing&&!modalIsOverflowing?getScrollbarSize():undefined,paddingLeft:!containerIsOverflowing&&modalIsOverflowing?getScrollbarSize():undefined});}var handleWindowResize=useEventCallback(function(){if(modal){updateDialogStyle(modal.dialog);}});useWillUnmount(function(){removeEventListener(window,'resize',handleWindowResize);removeStaticModalAnimationRef.current==null?void 0:removeStaticModalAnimationRef.current();});// We prevent the modal from closing during a drag by detecting where the\n// the click originates from. If it starts in the modal and then ends outside\n// don't close.\nvar handleDialogMouseDown=function handleDialogMouseDown(){waitingForMouseUpRef.current=true;};var handleMouseUp=function handleMouseUp(e){if(waitingForMouseUpRef.current&&modal&&e.target===modal.dialog){ignoreBackdropClickRef.current=true;}waitingForMouseUpRef.current=false;};var handleStaticModalAnimation=function handleStaticModalAnimation(){setAnimateStaticModal(true);removeStaticModalAnimationRef.current=transitionEnd(modal.dialog,function(){setAnimateStaticModal(false);});};var handleStaticBackdropClick=function handleStaticBackdropClick(e){if(e.target!==e.currentTarget){return;}handleStaticModalAnimation();};var handleClick=function handleClick(e){if(backdrop==='static'){handleStaticBackdropClick(e);return;}if(ignoreBackdropClickRef.current||e.target!==e.currentTarget){ignoreBackdropClickRef.current=false;return;}onHide==null?void 0:onHide();};var handleEscapeKeyDown=function handleEscapeKeyDown(e){if(!keyboard&&backdrop==='static'){// Call preventDefault to stop modal from closing in restart ui,\n// then play our animation.\ne.preventDefault();handleStaticModalAnimation();}else if(keyboard&&onEscapeKeyDown){onEscapeKeyDown(e);}};var handleEnter=function handleEnter(node,isAppearing){if(node){updateDialogStyle(node);}onEnter==null?void 0:onEnter(node,isAppearing);};var handleExit=function handleExit(node){removeStaticModalAnimationRef.current==null?void 0:removeStaticModalAnimationRef.current();onExit==null?void 0:onExit(node);};var handleEntering=function handleEntering(node,isAppearing){onEntering==null?void 0:onEntering(node,isAppearing);// FIXME: This should work even when animation is disabled.\naddEventListener(window,'resize',handleWindowResize);};var handleExited=function handleExited(node){if(node)node.style.display='';// RHL removes it sometimes\nonExited==null?void 0:onExited(node);// FIXME: This should work even when animation is disabled.\nremoveEventListener(window,'resize',handleWindowResize);};var renderBackdrop=useCallback(function(backdropProps){return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({},backdropProps),{},{className:classNames(\"\".concat(bsPrefix,\"-backdrop\"),backdropClassName,!animation&&'show')}));},[animation,backdropClassName,bsPrefix]);var baseModalStyle=_objectSpread(_objectSpread({},style),modalStyle);// If `display` is not set to block, autoFocus inside the modal fails\n// https://github.com/react-bootstrap/react-bootstrap/issues/5102\nbaseModalStyle.display='block';var renderDialog=function renderDialog(dialogProps){return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({role:\"dialog\"},dialogProps),{},{style:baseModalStyle,className:classNames(className,bsPrefix,animateStaticModal&&\"\".concat(bsPrefix,\"-static\")),onClick:backdrop?handleClick:undefined,onMouseUp:handleMouseUp,\"aria-label\":ariaLabel,\"aria-labelledby\":ariaLabelledby,\"aria-describedby\":ariaDescribedby,children:/*#__PURE__*/_jsx(Dialog,_objectSpread(_objectSpread({},props),{},{onMouseDown:handleDialogMouseDown,className:dialogClassName,contentClassName:contentClassName,children:children}))}));};return/*#__PURE__*/_jsx(ModalContext.Provider,{value:modalContext,children:/*#__PURE__*/_jsx(BaseModal,{show:show,ref:mergedRef,backdrop:backdrop,container:container,keyboard:true// Always set true - see handleEscapeKeyDown\n,autoFocus:autoFocus,enforceFocus:enforceFocus,restoreFocus:restoreFocus,restoreFocusOptions:restoreFocusOptions,onEscapeKeyDown:handleEscapeKeyDown,onShow:onShow,onHide:onHide,onEnter:handleEnter,onEntering:handleEntering,onEntered:onEntered,onExit:handleExit,onExiting:onExiting,onExited:handleExited,manager:getModalManager(),transition:animation?DialogTransition:undefined,backdropTransition:animation?BackdropTransition:undefined,renderBackdrop:renderBackdrop,renderDialog:renderDialog})});});Modal.displayName='Modal';Modal.defaultProps=defaultProps;export default Object.assign(Modal,{Body:ModalBody,Header:ModalHeader,Title:ModalTitle,Footer:ModalFooter,Dialog:ModalDialog,TRANSITION_DURATION:300,BACKDROP_TRANSITION_DURATION:150});","map":null,"metadata":{},"sourceType":"module"}