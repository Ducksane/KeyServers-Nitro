{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _toConsumableArray from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{AchievementEvent,AchievementsEvent,AchievementsScoreEvent,RequestAchievementsMessageComposer}from'@nitrots/nitro-renderer';import{useCallback,useEffect,useMemo,useState}from'react';import{AchievementCategory,CloneObject,GetAchievementCategoryTotalUnseen,GetAchievementIsIgnored,SendMessageComposer}from'../../api';import{UseMessageEventHook}from'../messages';var useAchievementsState=function useAchievementsState(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),needsUpdate=_useState2[0],setNeedsUpdate=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),achievementCategories=_useState4[0],setAchievementCategories=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),selectedCategoryCode=_useState6[0],setSelectedCategoryCode=_useState6[1];var _useState7=useState(-1),_useState8=_slicedToArray(_useState7,2),selectedAchievementId=_useState8[0],setSelectedAchievementId=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),achievementScore=_useState10[0],setAchievementScore=_useState10[1];var getTotalUnseen=useMemo(function(){var unseen=0;achievementCategories.forEach(function(category){return unseen+=GetAchievementCategoryTotalUnseen(category);});return unseen;},[achievementCategories]);var getProgress=useMemo(function(){var progress=0;achievementCategories.forEach(function(category){return progress+=category.getProgress();});return progress;},[achievementCategories]);var getMaxProgress=useMemo(function(){var progress=0;achievementCategories.forEach(function(category){return progress+=category.getMaxProgress();});return progress;},[achievementCategories]);var scaledProgressPercent=useMemo(function(){return~~((getProgress-0)*(100-0)/(getMaxProgress-0)+0);},[getProgress,getMaxProgress]);var setAchievementSeen=useCallback(function(categoryCode,achievementId){setAchievementCategories(function(prevValue){var newValue=_toConsumableArray(prevValue);var _iterator=_createForOfIteratorHelper(newValue),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var category=_step.value;if(category.code!==categoryCode)continue;var _iterator2=_createForOfIteratorHelper(category.achievements),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var achievement=_step2.value;if(achievement.achievementId!==achievementId)continue;achievement.unseen=0;}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return newValue;});},[]);var onAchievementEvent=useCallback(function(event){var parser=event.getParser();var achievement=parser.achievement;setAchievementCategories(function(prevValue){var newValue=_toConsumableArray(prevValue);var categoryIndex=newValue.findIndex(function(existing){return existing.code===achievement.category;});if(categoryIndex===-1){var category=new AchievementCategory(achievement.category);category.achievements.push(achievement);newValue.push(category);}else{var _category=CloneObject(newValue[categoryIndex]);var newAchievements=_toConsumableArray(_category.achievements);var achievementIndex=newAchievements.findIndex(function(existing){return existing.achievementId===achievement.achievementId;});var previousAchievement=null;if(achievementIndex===-1){newAchievements.push(achievement);}else{previousAchievement=newAchievements[achievementIndex];newAchievements[achievementIndex]=achievement;}if(!GetAchievementIsIgnored(achievement)){achievement.unseen++;if(previousAchievement)achievement.unseen+=previousAchievement.unseen;}_category.achievements=newAchievements;newValue[categoryIndex]=_category;}return newValue;});},[]);UseMessageEventHook(AchievementEvent,onAchievementEvent);var onAchievementsEvent=useCallback(function(event){var parser=event.getParser();var categories=[];var _iterator3=_createForOfIteratorHelper(parser.achievements),_step3;try{var _loop=function _loop(){var achievement=_step3.value;var categoryName=achievement.category;var existing=categories.find(function(category){return category.code===categoryName;});if(!existing){existing=new AchievementCategory(categoryName);categories.push(existing);}existing.achievements.push(achievement);};for(_iterator3.s();!(_step3=_iterator3.n()).done;){_loop();}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}setAchievementCategories(categories);},[]);UseMessageEventHook(AchievementsEvent,onAchievementsEvent);var onAchievementsScoreEvent=useCallback(function(event){var parser=event.getParser();setAchievementScore(parser.score);},[]);UseMessageEventHook(AchievementsScoreEvent,onAchievementsScoreEvent);useEffect(function(){if(!needsUpdate)return;SendMessageComposer(new RequestAchievementsMessageComposer());setNeedsUpdate(false);},[needsUpdate]);return{achievementCategories:achievementCategories,selectedCategoryCode:selectedCategoryCode,setSelectedCategoryCode:setSelectedCategoryCode,selectedAchievementId:selectedAchievementId,setSelectedAchievementId:setSelectedAchievementId,achievementScore:achievementScore,getTotalUnseen:getTotalUnseen,getProgress:getProgress,getMaxProgress:getMaxProgress,scaledProgressPercent:scaledProgressPercent,setAchievementSeen:setAchievementSeen};};export var useAchievements=useAchievementsState;","map":null,"metadata":{},"sourceType":"module"}