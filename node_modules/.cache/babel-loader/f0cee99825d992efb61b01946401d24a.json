{"ast":null,"code":"import _classCallCheck from\"C:/Users/Administrator/Desktop/nitro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/Administrator/Desktop/nitro/node_modules/@babel/runtime/helpers/esm/createClass.js\";import{Graphics}from'@pixi/graphics';import{Matrix}from'@pixi/math';import{TextureUtils}from'./TextureUtils';export var Rasterizer=/*#__PURE__*/function(){function Rasterizer(){_classCallCheck(this,Rasterizer);}_createClass(Rasterizer,null,[{key:\"getFlipHBitmapData\",value:// public static line(k:BitmapData, _arg_2: Point, _arg_3: Point, _arg_4: number): void\n// {\n//     var _local_5: number;\n//     var _local_6: number;\n//     var _local_7: number;\n//     var _local_8: number;\n//     var _local_9: number;\n//     var _local_10: number;\n//     var _local_11: number = _arg_2.x;\n//     var _local_12: number = _arg_2.y;\n//     _local_5 = (_arg_3.x - _arg_2.x);\n//     _local_6 = (_arg_3.y - _arg_2.y);\n//     _local_8 = ((_local_5 > 0) ? 1 : -1);\n//     _local_9 = ((_local_6 > 0) ? 1 : -1);\n//     _local_5 = Math.abs(_local_5);\n//     _local_6 = Math.abs(_local_6);\n//     k.lock();\n//     k.setPixel32(_local_11, _local_12, _arg_4);\n//     if (((_local_5 == 0) && (_local_6 == 0)))\n//     {\n//         return;\n//     }\n//     if (_local_5 > _local_6)\n//     {\n//         _local_7 = (_local_5 - 1);\n//         while (_local_7 >= 0)\n//         {\n//             _local_10 = (_local_10 + _local_6);\n//             _local_11 = (_local_11 + _local_8);\n//             if (_local_10 >= (_local_5 / 2))\n//             {\n//                 _local_10 = (_local_10 - _local_5);\n//                 _local_12 = (_local_12 + _local_9);\n//             }\n//             k.setPixel32(_local_11, _local_12, _arg_4);\n//             _local_7--;\n//         }\n//     }\n//     else\n//     {\n//         _local_7 = (_local_6 - 1);\n//         while (_local_7 >= 0)\n//         {\n//             _local_10 = (_local_10 + _local_5);\n//             _local_12 = (_local_12 + _local_9);\n//             if (_local_10 >= (_local_6 / 2))\n//             {\n//                 _local_10 = (_local_10 - _local_6);\n//                 _local_11 = (_local_11 + _local_8);\n//             }\n//             k.setPixel32(_local_11, _local_12, _arg_4);\n//             _local_7--;\n//         }\n//     }\n//     k.setPixel32(_arg_3.x, _arg_3.y, _arg_4);\n//     k.unlock();\n// }\nfunction getFlipHBitmapData(k){if(!k)return null;var matrix=new Matrix();matrix.scale(-1,1);matrix.translate(k.width,0);var graphic=new Graphics();graphic.beginTextureFill({texture:k,matrix:matrix}).drawRect(0,0,k.width,k.height).endFill();return TextureUtils.generateTexture(graphic);}},{key:\"getFlipVBitmapData\",value:function getFlipVBitmapData(k){if(!k)return null;var matrix=new Matrix();matrix.scale(1,-1);matrix.translate(0,k.height);var graphic=new Graphics();graphic.beginTextureFill({texture:k,matrix:matrix}).drawRect(0,0,k.width,k.height).endFill();return TextureUtils.generateTexture(graphic);}},{key:\"getFlipHVBitmapData\",value:function getFlipHVBitmapData(k){if(!k)return null;var matrix=new Matrix();matrix.scale(-1,-1);matrix.translate(k.width,k.height);var graphic=new Graphics();graphic.beginTextureFill({texture:k,matrix:matrix}).drawRect(0,0,k.width,k.height).endFill();return TextureUtils.generateTexture(graphic);}}]);return Rasterizer;}();","map":null,"metadata":{},"sourceType":"module"}