{"ast":null,"code":"import _classCallCheck from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _get from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/get.js\";import _getPrototypeOf from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";import _inherits from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import{BLEND_MODES}from'@pixi/constants';import{Texture}from'@pixi/core';import{Sprite}from'@pixi/sprite';import{NitroSprite}from'../../../core';import{TextureUtils}from'../../utils';export var ExtendedSprite=/*#__PURE__*/function(_Sprite){_inherits(ExtendedSprite,_Sprite);var _super=_createSuper(ExtendedSprite);function ExtendedSprite(){var _this;var texture=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;_classCallCheck(this,ExtendedSprite);_this=_super.call(this,texture);_this._offsetX=void 0;_this._offsetY=void 0;_this._tag=void 0;_this._alphaTolerance=void 0;_this._varyingDepth=void 0;_this._clickHandling=void 0;_this._pairedSpriteId=void 0;_this._pairedSpriteUpdateCounter=void 0;_this.name=void 0;_this._offsetX=0;_this._offsetY=0;_this._tag='';_this._alphaTolerance=128;_this._varyingDepth=false;_this._clickHandling=false;_this._pairedSpriteId=-1;_this._pairedSpriteUpdateCounter=-1;return _this;}_createClass(ExtendedSprite,[{key:\"needsUpdate\",value:function needsUpdate(pairedSpriteId,pairedSpriteUpdateCounter){if(this._pairedSpriteId===pairedSpriteId&&this._pairedSpriteUpdateCounter===pairedSpriteUpdateCounter)return false;this._pairedSpriteId=pairedSpriteId;this._pairedSpriteUpdateCounter=pairedSpriteUpdateCounter;return true;}},{key:\"calculateVertices\",value:function calculateVertices(){if(!this.texture.orig)return;_get(_getPrototypeOf(ExtendedSprite.prototype),\"calculateVertices\",this).call(this);}},{key:\"setTexture\",value:function setTexture(texture){if(!texture)texture=Texture.EMPTY;if(texture===this.texture)return;if(texture===Texture.EMPTY){this._pairedSpriteId=-1;this._pairedSpriteUpdateCounter=-1;}this.texture=texture;}},{key:\"containsPoint\",value:function containsPoint(point){return ExtendedSprite.containsPoint(this,point);}},{key:\"offsetX\",get:function get(){return this._offsetX;},set:function set(offset){this._offsetX=offset;}},{key:\"offsetY\",get:function get(){return this._offsetY;},set:function set(offset){this._offsetY=offset;}},{key:\"tag\",get:function get(){return this._tag;},set:function set(tag){this._tag=tag;}},{key:\"alphaTolerance\",get:function get(){return this._alphaTolerance;},set:function set(tolerance){this._alphaTolerance=tolerance;}},{key:\"varyingDepth\",get:function get(){return this._varyingDepth;},set:function set(flag){this._varyingDepth=flag;}},{key:\"clickHandling\",get:function get(){return this._clickHandling;},set:function set(flag){this._clickHandling=flag;}}],[{key:\"containsPoint\",value:function containsPoint(sprite,point){if(!sprite||!point||sprite.alphaTolerance>255)return false;if(!(sprite instanceof Sprite))return false;if(sprite.texture===Texture.EMPTY||sprite.blendMode!==BLEND_MODES.NORMAL)return;var texture=sprite.texture;var baseTexture=texture.baseTexture;if(!texture||!baseTexture||!baseTexture.valid)return false;var x=point.x*sprite.scale.x;var y=point.y*sprite.scale.y;if(!sprite.getLocalBounds().contains(x,y))return false;//@ts-ignore\nif(!baseTexture.hitMap){var canvas=null;if(!baseTexture.resource){//@ts-ignore\nif(!texture.getLocalBounds){var tempSprite=new NitroSprite(texture);canvas=TextureUtils.generateCanvas(tempSprite);tempSprite.destroy();}else{canvas=TextureUtils.generateCanvas(texture);}}if(!ExtendedSprite.generateHitMap(baseTexture,canvas))return false;}//@ts-ignore\nvar hitMap=baseTexture.hitMap;var dx=x+texture.frame.x;var dy=y+texture.frame.y;if(texture.trim){dx-=texture.trim.x;dy-=texture.trim.y;}dx=Math.round(dx)*baseTexture.resolution;dy=Math.round(dy)*baseTexture.resolution;var ind=dx+dy*baseTexture.realWidth;var ind1=ind%32;var ind2=ind/32|0;return(hitMap[ind2]&1<<ind1)!==0;}},{key:\"generateHitMap\",value:function generateHitMap(baseTexture){var tempCanvas=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var canvas=null;var context=null;if(tempCanvas){canvas=tempCanvas;context=canvas.getContext('2d');}else{if(!baseTexture.resource)return false;//@ts-ignore\nvar source=baseTexture.resource.source;if(!source)return false;if(source.getContext){canvas=source;context=canvas.getContext('2d');}else if(source instanceof Image){canvas=document.createElement('canvas');canvas.width=source.width;canvas.height=source.height;context=canvas.getContext('2d');context.drawImage(source,0,0);}else return false;}var width=canvas.width;var height=canvas.height;var imageData=context.getImageData(0,0,width,height);var hitmap=new Uint32Array(Math.ceil(width*height/32));var threshold=128;for(var i=0;i<width*height;i++){var ind1=i%32;var ind2=i/32|0;if(imageData.data[i*4+3]>=threshold){hitmap[ind2]=hitmap[ind2]|1<<ind1;}}//@ts-ignore\nbaseTexture.hitMap=hitmap;return true;}}]);return ExtendedSprite;}(Sprite);","map":null,"metadata":{},"sourceType":"module"}