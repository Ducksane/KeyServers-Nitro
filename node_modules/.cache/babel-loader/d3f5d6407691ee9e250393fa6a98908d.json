{"ast":null,"code":"import _slicedToArray from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _createForOfIteratorHelper from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _classCallCheck from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import{NitroManager}from'../../core/common/NitroManager';import{BadgePointLimitsEvent}from'../communication/messages/incoming/inventory/badges/BadgePointLimitsEvent';import{Nitro}from'../Nitro';import{BadgeBaseAndLevel}from'./BadgeBaseAndLevel';import{NitroLocalizationEvent}from'./NitroLocalizationEvent';export var NitroLocalizationManager=/*#__PURE__*/function(_NitroManager){_inherits(NitroLocalizationManager,_NitroManager);var _super=_createSuper(NitroLocalizationManager);function NitroLocalizationManager(communication){var _this;_classCallCheck(this,NitroLocalizationManager);_this=_super.call(this);_this._communication=void 0;_this._definitions=void 0;_this._parameters=void 0;_this._badgePointLimits=void 0;_this._romanNumerals=void 0;_this._pendingUrls=void 0;_this._communication=communication;_this._definitions=new Map();_this._parameters=new Map();_this._badgePointLimits=new Map();_this._romanNumerals=['I','II','III','IV','V','VI','VII','VIII','IX','X','XI','XII','XIII','XIV','XV','XVI','XVII','XVIII','XIX','XX','XXI','XXII','XXIII','XXIV','XXV','XXVI','XXVII','XXVIII','XXIX','XXX'];_this._pendingUrls=[];return _this;}_createClass(NitroLocalizationManager,[{key:\"onInit\",value:function onInit(){this._communication.registerMessageEvent(new BadgePointLimitsEvent(this.onBadgePointLimitsEvent.bind(this)));var urls=Nitro.instance.getConfiguration('external.texts.url');if(!Array.isArray(urls)){urls=[Nitro.instance.getConfiguration('external.texts.url')];}for(var i=0;i<urls.length;i++){urls[i]=Nitro.instance.core.configuration.interpolate(urls[i]);}this._pendingUrls=urls;this.loadNextLocalization();}},{key:\"loadNextLocalization\",value:function loadNextLocalization(){if(!this._pendingUrls.length){this.events&&this.events.dispatchEvent(new NitroLocalizationEvent(NitroLocalizationEvent.LOADED));return;}this.loadLocalizationFromURL(this._pendingUrls[0]);}},{key:\"loadLocalizationFromURL\",value:function loadLocalizationFromURL(url){var _this2=this;fetch(url).then(function(response){return response.json();}).then(function(data){return _this2.onLocalizationLoaded(data,url);}).catch(function(err){return _this2.onLocalizationFailed(err);});}},{key:\"onLocalizationLoaded\",value:function onLocalizationLoaded(data,url){if(!data)return;if(!this.parseLocalization(data))throw new Error(\"Invalid json data for file \".concat(url));var index=this._pendingUrls.indexOf(url);if(index>=0)this._pendingUrls.splice(index,1);this.loadNextLocalization();}},{key:\"onLocalizationFailed\",value:function onLocalizationFailed(error){this.events&&this.events.dispatchEvent(new NitroLocalizationEvent(NitroLocalizationEvent.FAILED));}},{key:\"parseLocalization\",value:function parseLocalization(data){if(!data)return false;for(var key in data){this._definitions.set(key,data[key]);}return true;}},{key:\"onBadgePointLimitsEvent\",value:function onBadgePointLimitsEvent(event){var parser=event.getParser();var _iterator=_createForOfIteratorHelper(parser.data),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var data=_step.value;this.setBadgePointLimit(data.badgeId,data.limit);}}catch(err){_iterator.e(err);}finally{_iterator.f();}}},{key:\"getBadgePointLimit\",value:function getBadgePointLimit(badge){return this._badgePointLimits.get(badge)||-1;}},{key:\"setBadgePointLimit\",value:function setBadgePointLimit(badge,point){this._badgePointLimits.set(badge,point);}},{key:\"getRomanNumeral\",value:function getRomanNumeral(number){return this._romanNumerals[Math.max(0,number-1)];}},{key:\"getPreviousLevelBadgeId\",value:function getPreviousLevelBadgeId(badgeName){var badge=new BadgeBaseAndLevel(badgeName);badge.level--;return badge.getBadgeId;}},{key:\"hasValue\",value:function hasValue(key){return this._definitions.has(key);}},{key:\"getValue\",value:function getValue(key){var doParams=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;if(!key||!key.length)return null;var keys=key.match(/\\$\\{.[^}]*\\}/g);if(keys&&keys.length){var _iterator2=_createForOfIteratorHelper(keys),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var splitKey=_step2.value;key=key.replace(splitKey,this.getValue(splitKey.slice(2,-1),doParams));}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}var value=this._definitions.get(key)||null;if(!value){value=Nitro.instance.core.configuration.definitions.get(key);if(value)return value;}if(value&&doParams){var parameters=this._parameters.get(key);if(parameters){var _iterator3=_createForOfIteratorHelper(parameters),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _step3$value=_slicedToArray(_step3.value,2),parameter=_step3$value[0],replacement=_step3$value[1];value=value.replace('%'+parameter+'%',replacement);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}}return value||key;}},{key:\"getValueWithParameter\",value:function getValueWithParameter(key,parameter,replacement){var value=this.getValue(key,false);var replacedValue=value.replace('%'+parameter+'%',replacement);if(value.startsWith('%{')){// This adds support for multi-optioned texts like\n// catalog.vip.item.header.months=%{NUM_MONTHS|0 months|1 month|%% months}\n// It only checks for this multi-optioned thext if the value of the key starts with %{\n// If it does, it will create a RegEx with the provided parameter, eg. NUM_DAYS or NUM_MONTS\n// Then, based on the provided replacement it searches for the resultgroup based on the replacement.\n// If the replacement is not either 0, 1 - it will be assumed it will be plural. (eg. Months)\nvar regex=new RegExp('%{'+parameter.toUpperCase()+'\\\\|([^|]*)\\\\|([^|]*)\\\\|([^|]*)}');var result=value.match(regex);if(!result)return replacedValue;var indexKey=-1;var replacementAsNumber=Number.parseInt(replacement);var replace=false;switch(replacementAsNumber){case 0:indexKey=1;break;case 1:indexKey=2;break;default:case 2:indexKey=3;replace=true;break;}if(indexKey==-1||typeof result[indexKey]=='undefined'){return replacedValue;}var valueFromResults=result[indexKey];if(valueFromResults){return valueFromResults.replace('%%',replacement);}}return replacedValue;}},{key:\"getValueWithParameters\",value:function getValueWithParameters(key,parameters,replacements){var value=this.getValue(key,false);if(parameters){for(var i=0;i<parameters.length;i++){var parameter=parameters[i];var replacement=replacements[i];if(replacement===undefined)continue;value=value.replace('%'+parameter+'%',replacement);if(value.startsWith('%{')){var regex=new RegExp('%{'+parameter.toUpperCase()+'\\\\|([^|]*)\\\\|([^|]*)\\\\|([^|]*)}');var result=value.match(regex);if(!result)continue;var replacementAsNumber=parseInt(replacement);var indexKey=-1;var replace=false;switch(replacementAsNumber){case 0:indexKey=1;break;case 1:indexKey=2;break;case 2:default:indexKey=3;replace=true;break;}if(indexKey===-1||typeof result[indexKey]==='undefined')continue;var valueFromResults=result[indexKey];if(valueFromResults){value=valueFromResults.replace('%%',replacement);}}}}return value;}},{key:\"setValue\",value:function setValue(key,value){this._definitions.set(key,value);}},{key:\"registerParameter\",value:function registerParameter(key,parameter,value){if(!key||key.length===0||!parameter||parameter.length===0)return;var existing=this._parameters.get(key);if(!existing){existing=new Map();this._parameters.set(key,existing);}existing.set(parameter,value);}},{key:\"getBadgeName\",value:function getBadgeName(key){var badge=new BadgeBaseAndLevel(key);var keys=['badge_name_'+key,'badge_name_'+badge.base];var name=this._Str_2103(this.getExistingKey(keys));name=name.replace('%roman%',this.getRomanNumeral(badge.level));return name;}},{key:\"getBadgeDesc\",value:function getBadgeDesc(key){var badge=new BadgeBaseAndLevel(key);var keys=['badge_desc_'+key,'badge_desc_'+badge.base];var desc=this._Str_2103(this.getExistingKey(keys));var limit=this.getBadgePointLimit(key);if(limit>-1)desc=desc.replace('%limit%',limit.toString());desc=desc.replace('%roman%',this.getRomanNumeral(badge.level));return desc;}},{key:\"getExistingKey\",value:function getExistingKey(keys){var _iterator4=_createForOfIteratorHelper(keys),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var entry=_step4.value;var item=this.getValue(entry);if(item!=entry)return item;}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}return'';}},{key:\"_Str_2103\",value:function _Str_2103(k){return k.replace('${','$').replace('{','$').replace('}','$');}}]);return NitroLocalizationManager;}(NitroManager);","map":null,"metadata":{},"sourceType":"module"}