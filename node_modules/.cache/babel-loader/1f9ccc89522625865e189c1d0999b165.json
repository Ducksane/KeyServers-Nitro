{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _classCallCheck from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/createClass.js\";import{Matrix,Point}from'@pixi/math';import{PlaneMask}from'./PlaneMask';import{PlaneMaskVisualization}from'./PlaneMaskVisualization';export var PlaneMaskManager=/*#__PURE__*/function(){function PlaneMaskManager(){_classCallCheck(this,PlaneMaskManager);this._assetCollection=void 0;this._masks=void 0;this._data=void 0;this._assetCollection=null;this._masks=new Map();this._data=null;}_createClass(PlaneMaskManager,[{key:\"data\",get:function get(){return this._data;}},{key:\"dispose\",value:function dispose(){this._assetCollection=null;this._data=null;if(this._masks&&this._masks.size){var _iterator=_createForOfIteratorHelper(this._masks.values()),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var mask=_step.value;if(!mask)continue;mask.dispose();}}catch(err){_iterator.e(err);}finally{_iterator.f();}this._masks.clear();}}},{key:\"initialize\",value:function initialize(k){this._data=k;}},{key:\"initializeAssetCollection\",value:function initializeAssetCollection(k){if(!this.data)return;this._assetCollection=k;this.parseMasks(this.data,k);}},{key:\"parseMasks\",value:function parseMasks(k,_arg_2){if(!k||!_arg_2)return;if(k.masks&&k.masks.length){var index=0;while(index<k.masks.length){var mask=k.masks[index];if(mask){var id=mask.id;var existing=this._masks.get(id);if(existing)continue;var newMask=new PlaneMask();if(mask.visualizations&&mask.visualizations.length){var visualIndex=0;while(visualIndex<mask.visualizations.length){var visualization=mask.visualizations[visualIndex];if(visualization){var size=visualization.size;var maskVisualization=newMask.createMaskVisualization(size);if(maskVisualization){var assetName=this.parseMaskBitmaps(visualization.bitmaps,maskVisualization,_arg_2);newMask.setAssetName(size,assetName);}}visualIndex++;}}this._masks.set(id,newMask);}index++;}}}},{key:\"parseMaskBitmaps\",value:function parseMaskBitmaps(k,_arg_2,_arg_3){if(!k||!k.length)return null;var graphicName=null;var _iterator2=_createForOfIteratorHelper(k),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var bitmap=_step2.value;if(!bitmap)continue;var assetName=bitmap.assetName;var asset=_arg_3.getAsset(assetName);if(!asset)continue;var normalMinX=PlaneMaskVisualization.MIN_NORMAL_COORDINATE_VALUE;var normalMaxX=PlaneMaskVisualization.MAX_NORMAL_COORDINATE_VALUE;var normalMinY=PlaneMaskVisualization.MIN_NORMAL_COORDINATE_VALUE;var normalMaxY=PlaneMaskVisualization.MAX_NORMAL_COORDINATE_VALUE;if(bitmap.normalMinX!==undefined)normalMinX=bitmap.normalMinX;if(bitmap.normalMaxX!==undefined)normalMaxX=bitmap.normalMaxX;if(bitmap.normalMinY!==undefined)normalMinY=bitmap.normalMinY;if(bitmap.normalMaxY!==undefined)normalMaxY=bitmap.normalMaxY;if(!asset.flipH)graphicName=assetName;_arg_2.addBitmap(asset,normalMinX,normalMaxX,normalMinY,normalMaxY);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return graphicName;}},{key:\"updateMask\",value:function updateMask(k,_arg_2,_arg_3,_arg_4,_arg_5,_arg_6){var mask=this._masks.get(_arg_2);if(!mask)return true;var asset=mask.getGraphicAsset(_arg_3,_arg_4);if(!asset)return true;var texture=asset.texture;if(!texture)return true;var point=new Point(_arg_5+asset.offsetX,_arg_6+asset.offsetY);var matrix=new Matrix();var a=1;var b=1;var c=0;var d=0;if(asset.flipH){a=-1;c=-texture.width;}if(asset.flipV){b=-1;d=-texture.height;}matrix.scale(a,b);matrix.translate(point.x+c,point.y+d);k.beginTextureFill({texture:texture,matrix:matrix}).drawRect(matrix.tx,matrix.ty,texture.width,texture.height).endFill();return true;}},{key:\"getMask\",value:function getMask(k){if(!this._masks||!this._masks.size)return null;return this._masks.get(k)||null;}}]);return PlaneMaskManager;}();","map":null,"metadata":{},"sourceType":"module"}