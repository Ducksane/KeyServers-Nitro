{"ast":null,"code":"var _excluded=[\"as\",\"onSelect\",\"activeKey\",\"role\",\"onKeyDown\"];function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import qsa from'dom-helpers/querySelectorAll';import*as React from'react';import{useContext,useEffect,useRef}from'react';import useForceUpdate from'@restart/hooks/useForceUpdate';import useMergedRefs from'@restart/hooks/useMergedRefs';import NavContext from'./NavContext';import SelectableContext,{makeEventKey}from'./SelectableContext';import TabContext from'./TabContext';import{dataAttr,dataProp}from'./DataKey';import NavItem from'./NavItem';import{jsx as _jsx}from\"react/jsx-runtime\";// eslint-disable-next-line @typescript-eslint/no-empty-function\nvar noop=function noop(){};var EVENT_KEY_ATTR=dataAttr('event-key');var Nav=/*#__PURE__*/React.forwardRef(function(_ref,ref){var _ref$as=_ref.as,Component=_ref$as===void 0?'div':_ref$as,onSelect=_ref.onSelect,activeKey=_ref.activeKey,role=_ref.role,onKeyDown=_ref.onKeyDown,props=_objectWithoutPropertiesLoose(_ref,_excluded);// A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n// and don't want to reset the set in the effect\nvar forceUpdate=useForceUpdate();var needsRefocusRef=useRef(false);var parentOnSelect=useContext(SelectableContext);var tabContext=useContext(TabContext);var getControlledId,getControllerId;if(tabContext){role=role||'tablist';activeKey=tabContext.activeKey;// TODO: do we need to duplicate these?\ngetControlledId=tabContext.getControlledId;getControllerId=tabContext.getControllerId;}var listNode=useRef(null);var getNextActiveTab=function getNextActiveTab(offset){var currentListNode=listNode.current;if(!currentListNode)return null;var items=qsa(currentListNode,\"[\".concat(EVENT_KEY_ATTR,\"]:not([aria-disabled=true])\"));var activeChild=currentListNode.querySelector('[aria-selected=true]');if(!activeChild||activeChild!==document.activeElement)return null;var index=items.indexOf(activeChild);if(index===-1)return null;var nextIndex=index+offset;if(nextIndex>=items.length)nextIndex=0;if(nextIndex<0)nextIndex=items.length-1;return items[nextIndex];};var handleSelect=function handleSelect(key,event){if(key==null)return;onSelect==null?void 0:onSelect(key,event);parentOnSelect==null?void 0:parentOnSelect(key,event);};var handleKeyDown=function handleKeyDown(event){onKeyDown==null?void 0:onKeyDown(event);if(!tabContext){return;}var nextActiveChild;switch(event.key){case'ArrowLeft':case'ArrowUp':nextActiveChild=getNextActiveTab(-1);break;case'ArrowRight':case'ArrowDown':nextActiveChild=getNextActiveTab(1);break;default:return;}if(!nextActiveChild)return;event.preventDefault();handleSelect(nextActiveChild.dataset[dataProp('EventKey')]||null,event);needsRefocusRef.current=true;forceUpdate();};useEffect(function(){if(listNode.current&&needsRefocusRef.current){var activeChild=listNode.current.querySelector(\"[\".concat(EVENT_KEY_ATTR,\"][aria-selected=true]\"));activeChild==null?void 0:activeChild.focus();}needsRefocusRef.current=false;});var mergedRef=useMergedRefs(ref,listNode);return/*#__PURE__*/_jsx(SelectableContext.Provider,{value:handleSelect,children:/*#__PURE__*/_jsx(NavContext.Provider,{value:{role:role,// used by NavLink to determine it's role\nactiveKey:makeEventKey(activeKey),getControlledId:getControlledId||noop,getControllerId:getControllerId||noop},children:/*#__PURE__*/_jsx(Component,Object.assign({},props,{onKeyDown:handleKeyDown,ref:mergedRef,role:role}))})});});Nav.displayName='Nav';export default Object.assign(Nav,{Item:NavItem});","map":null,"metadata":{},"sourceType":"module"}