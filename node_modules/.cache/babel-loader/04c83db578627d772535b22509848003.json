{"ast":null,"code":"import getWindow from\"./getWindow.js\";import getDocumentElement from\"./getDocumentElement.js\";import getWindowScrollBarX from\"./getWindowScrollBarX.js\";export default function getViewportRect(element){var win=getWindow(element);var html=getDocumentElement(element);var visualViewport=win.visualViewport;var width=html.clientWidth;var height=html.clientHeight;var x=0;var y=0;// NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper\n// can be obscured underneath it.\n// Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even\n// if it isn't open, so if this isn't available, the popper will be detected\n// to overflow the bottom of the screen too early.\nif(visualViewport){width=visualViewport.width;height=visualViewport.height;// Uses Layout Viewport (like Chrome; Safari does not currently)\n// In Chrome, it returns a value very close to 0 (+/-) but contains rounding\n// errors due to floating point numbers, so we need to check precision.\n// Safari returns a number <= 0, usually < -1 when pinch-zoomed\n// Feature detection fails in mobile emulation mode in Chrome.\n// Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <\n// 0.001\n// Fallback here: \"Not Safari\" userAgent\nif(!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)){x=visualViewport.offsetLeft;y=visualViewport.offsetTop;}}return{width:width,height:height,x:x+getWindowScrollBarX(element),y:y};}","map":null,"metadata":{},"sourceType":"module"}