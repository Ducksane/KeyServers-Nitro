{"ast":null,"code":"import _slicedToArray from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _excluded=[\"as\",\"active\",\"eventKey\"];function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import{useContext}from'react';import useEventCallback from'@restart/hooks/useEventCallback';import NavContext from'./NavContext';import SelectableContext,{makeEventKey}from'./SelectableContext';import Button from'./Button';import{dataAttr}from'./DataKey';import TabContext from'./TabContext';import{jsx as _jsx}from\"react/jsx-runtime\";export function useNavItem(_ref2){var key=_ref2.key,onClick=_ref2.onClick,active=_ref2.active,id=_ref2.id,role=_ref2.role,disabled=_ref2.disabled;var parentOnSelect=useContext(SelectableContext);var navContext=useContext(NavContext);var tabContext=useContext(TabContext);var isActive=active;var props={role:role};if(navContext){if(!role&&navContext.role==='tablist')props.role='tab';var contextControllerId=navContext.getControllerId(key!=null?key:null);var contextControlledId=navContext.getControlledId(key!=null?key:null);// @ts-ignore\nprops[dataAttr('event-key')]=key;props.id=contextControllerId||id;isActive=active==null&&key!=null?navContext.activeKey===key:active;/**\n     * Simplified scenario for `mountOnEnter`.\n     *\n     * While it would make sense to keep 'aria-controls' for tabs that have been mounted at least\n     * once, it would also complicate the code quite a bit, for very little gain.\n     * The following implementation is probably good enough.\n     *\n     * @see https://github.com/react-restart/ui/pull/40#issuecomment-1009971561\n     */if(isActive||!(tabContext!=null&&tabContext.unmountOnExit)&&!(tabContext!=null&&tabContext.mountOnEnter))props['aria-controls']=contextControlledId;}if(props.role==='tab'){if(disabled){props.tabIndex=-1;props['aria-disabled']=true;}if(isActive){props['aria-selected']=isActive;}else{props.tabIndex=-1;}}props.onClick=useEventCallback(function(e){if(disabled)return;onClick==null?void 0:onClick(e);if(key==null){return;}if(parentOnSelect&&!e.isPropagationStopped()){parentOnSelect(key,e);}});return[props,{isActive:isActive}];}var NavItem=/*#__PURE__*/React.forwardRef(function(_ref,ref){var _ref$as=_ref.as,Component=_ref$as===void 0?Button:_ref$as,active=_ref.active,eventKey=_ref.eventKey,options=_objectWithoutPropertiesLoose(_ref,_excluded);var _useNavItem=useNavItem(Object.assign({key:makeEventKey(eventKey,options.href),active:active},options)),_useNavItem2=_slicedToArray(_useNavItem,2),props=_useNavItem2[0],meta=_useNavItem2[1];// @ts-ignore\nprops[dataAttr('active')]=meta.isActive;return/*#__PURE__*/_jsx(Component,Object.assign({},options,props,{ref:ref}));});NavItem.displayName='NavItem';export default NavItem;","map":null,"metadata":{},"sourceType":"module"}