{"ast":null,"code":"import _slicedToArray from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _excluded=[\"active\",\"eventKey\",\"mountOnEnter\",\"transition\",\"unmountOnExit\",\"role\",\"onEnter\",\"onEntering\",\"onEntered\",\"onExit\",\"onExiting\",\"onExited\"],_excluded2=[\"activeKey\",\"getControlledId\",\"getControllerId\"],_excluded3=[\"as\"];function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import{useContext}from'react';import TabContext from'./TabContext';import SelectableContext,{makeEventKey}from'./SelectableContext';import NoopTransition from'./NoopTransition';import{jsx as _jsx}from\"react/jsx-runtime\";export function useTabPanel(_ref){var active=_ref.active,eventKey=_ref.eventKey,mountOnEnter=_ref.mountOnEnter,transition=_ref.transition,unmountOnExit=_ref.unmountOnExit,_ref$role=_ref.role,role=_ref$role===void 0?'tabpanel':_ref$role,onEnter=_ref.onEnter,onEntering=_ref.onEntering,onEntered=_ref.onEntered,onExit=_ref.onExit,onExiting=_ref.onExiting,onExited=_ref.onExited,props=_objectWithoutPropertiesLoose(_ref,_excluded);var context=useContext(TabContext);if(!context)return[Object.assign({},props,{role:role}),{eventKey:eventKey,isActive:active,mountOnEnter:mountOnEnter,transition:transition,unmountOnExit:unmountOnExit,onEnter:onEnter,onEntering:onEntering,onEntered:onEntered,onExit:onExit,onExiting:onExiting,onExited:onExited}];var activeKey=context.activeKey,getControlledId=context.getControlledId,getControllerId=context.getControllerId,rest=_objectWithoutPropertiesLoose(context,_excluded2);var key=makeEventKey(eventKey);return[Object.assign({},props,{role:role,id:getControlledId(eventKey),'aria-labelledby':getControllerId(eventKey)}),{eventKey:eventKey,isActive:active==null&&key!=null?makeEventKey(activeKey)===key:active,transition:transition||rest.transition,mountOnEnter:mountOnEnter!=null?mountOnEnter:rest.mountOnEnter,unmountOnExit:unmountOnExit!=null?unmountOnExit:rest.unmountOnExit,onEnter:onEnter,onEntering:onEntering,onEntered:onEntered,onExit:onExit,onExiting:onExiting,onExited:onExited}];}var TabPanel=/*#__PURE__*/React.forwardRef(// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction(_ref2,ref){var _ref2$as=_ref2.as,Component=_ref2$as===void 0?'div':_ref2$as,props=_objectWithoutPropertiesLoose(_ref2,_excluded3);var _useTabPanel=useTabPanel(props),_useTabPanel2=_slicedToArray(_useTabPanel,2),tabPanelProps=_useTabPanel2[0],_useTabPanel2$=_useTabPanel2[1],isActive=_useTabPanel2$.isActive,onEnter=_useTabPanel2$.onEnter,onEntering=_useTabPanel2$.onEntering,onEntered=_useTabPanel2$.onEntered,onExit=_useTabPanel2$.onExit,onExiting=_useTabPanel2$.onExiting,onExited=_useTabPanel2$.onExited,mountOnEnter=_useTabPanel2$.mountOnEnter,unmountOnExit=_useTabPanel2$.unmountOnExit,_useTabPanel2$$transi=_useTabPanel2$.transition,Transition=_useTabPanel2$$transi===void 0?NoopTransition:_useTabPanel2$$transi;// We provide an empty the TabContext so `<Nav>`s in `<TabPanel>`s don't\n// conflict with the top level one.\nreturn/*#__PURE__*/_jsx(TabContext.Provider,{value:null,children:/*#__PURE__*/_jsx(SelectableContext.Provider,{value:null,children:/*#__PURE__*/_jsx(Transition,{in:isActive,onEnter:onEnter,onEntering:onEntering,onEntered:onEntered,onExit:onExit,onExiting:onExiting,onExited:onExited,mountOnEnter:mountOnEnter,unmountOnExit:unmountOnExit,children:/*#__PURE__*/_jsx(Component,Object.assign({},tabPanelProps,{ref:ref,hidden:!isActive,\"aria-hidden\":!isActive}))})})});});TabPanel.displayName='TabPanel';export default TabPanel;","map":null,"metadata":{},"sourceType":"module"}