{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _construct from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/construct.js\";import _toConsumableArray from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{UnseenItemsEvent,UnseenResetCategoryComposer,UnseenResetItemsComposer}from'@nitrots/nitro-renderer';import{useCallback,useMemo,useState}from'react';import{useBetween}from'use-between';import{UseMessageEventHook}from'..';import{SendMessageComposer}from'../../api';var sendResetCategoryMessage=function sendResetCategoryMessage(category){return SendMessageComposer(new UnseenResetCategoryComposer(category));};var sendResetItemsMessage=function sendResetItemsMessage(category,itemIds){return SendMessageComposer(_construct(UnseenResetItemsComposer,[category].concat(_toConsumableArray(itemIds))));};var useInventoryUnseenTrackerState=function useInventoryUnseenTrackerState(){var _useState=useState(new Map()),_useState2=_slicedToArray(_useState,2),unseenItems=_useState2[0],setUnseenItems=_useState2[1];var getCount=useCallback(function(category){var _unseenItems$get;return((_unseenItems$get=unseenItems.get(category))===null||_unseenItems$get===void 0?void 0:_unseenItems$get.length)||0;},[unseenItems]);var getFullCount=useMemo(function(){var count=0;var _iterator=_createForOfIteratorHelper(unseenItems.keys()),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var key=_step.value;count+=getCount(key);}}catch(err){_iterator.e(err);}finally{_iterator.f();}return count;},[unseenItems,getCount]);var resetCategory=useCallback(function(category){var didReset=true;setUnseenItems(function(prevValue){if(!prevValue.has(category)){didReset=false;return prevValue;}var newValue=new Map(prevValue);newValue.delete(category);sendResetCategoryMessage(category);return newValue;});return didReset;},[]);var resetItems=useCallback(function(category,itemIds){var didReset=true;setUnseenItems(function(prevValue){if(!prevValue.has(category)){didReset=false;return prevValue;}var newValue=new Map(prevValue);var existing=newValue.get(category);if(existing){var _iterator2=_createForOfIteratorHelper(itemIds),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var itemId=_step2.value;existing.splice(existing.indexOf(itemId),1);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}sendResetItemsMessage(category,itemIds);return newValue;});return didReset;},[]);var isUnseen=useCallback(function(category,itemId){if(!unseenItems.has(category))return false;var items=unseenItems.get(category);return items.indexOf(itemId)>=0;},[unseenItems]);var removeUnseen=useCallback(function(category,itemId){setUnseenItems(function(prevValue){if(!prevValue.has(category))return prevValue;var newValue=new Map(prevValue);var items=newValue.get(category);var index=items.indexOf(itemId);if(index>=0)items.splice(index,1);return newValue;});},[]);var onUnseenItemsEvent=useCallback(function(event){var parser=event.getParser();setUnseenItems(function(prevValue){var newValue=new Map(prevValue);var _iterator3=_createForOfIteratorHelper(parser.categories),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var category=_step3.value;var existing=newValue.get(category);if(!existing){existing=[];newValue.set(category,existing);}var itemIds=parser.getItemsByCategory(category);var _iterator4=_createForOfIteratorHelper(itemIds),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var itemId=_step4.value;existing.indexOf(itemId)===-1&&existing.push(itemId);}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}return newValue;});},[]);UseMessageEventHook(UnseenItemsEvent,onUnseenItemsEvent);return{getCount:getCount,getFullCount:getFullCount,resetCategory:resetCategory,resetItems:resetItems,isUnseen:isUnseen,removeUnseen:removeUnseen};};export var useInventoryUnseenTracker=function useInventoryUnseenTracker(){return useBetween(useInventoryUnseenTrackerState);};","map":null,"metadata":{},"sourceType":"module"}