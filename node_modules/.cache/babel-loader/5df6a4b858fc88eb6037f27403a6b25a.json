{"ast":null,"code":"import _objectSpread from\"C:/Users/Administrator/Desktop/nitro/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/Administrator/Desktop/nitro/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{RoomObjectType}from'@nitrots/nitro-renderer';import{useMemo,useState}from'react';import{GetSessionDataManager,LocalizeText}from'../../../api';import{AutoGrid,Button,Column,Flex,LayoutGridItem,Text}from'../../../common';import{ChatEntryType}from'../../chat-history/common/ChatEntryType';import{GetChatHistory}from'../../chat-history/common/GetChatHistory';import{useHelpContext}from'../HelpContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var SelectReportedUserView=function SelectReportedUserView(props){var _useState=useState(-1),_useState2=_slicedToArray(_useState,2),selectedUserId=_useState2[0],setSelectedUserId=_useState2[1];var _useHelpContext=useHelpContext(),_useHelpContext$helpR=_useHelpContext.helpReportState,helpReportState=_useHelpContext$helpR===void 0?null:_useHelpContext$helpR,_useHelpContext$setHe=_useHelpContext.setHelpReportState,setHelpReportState=_useHelpContext$setHe===void 0?null:_useHelpContext$setHe;var availableUsers=useMemo(function(){var users=new Map();GetChatHistory().chats.forEach(function(chat){if(chat.type===ChatEntryType.TYPE_CHAT&&chat.entityType===RoomObjectType.USER&&chat.entityId!==GetSessionDataManager().userId){if(!users.has(chat.entityId)){users.set(chat.entityId,{id:chat.entityId,username:chat.name});}}});return Array.from(users.values());},[]);var submitUser=function submitUser(){if(selectedUserId<=0)return;setHelpReportState(function(prevValue){var reportedUserId=selectedUserId;var currentStep=2;return _objectSpread(_objectSpread({},prevValue),{},{reportedUserId:reportedUserId,currentStep:currentStep});});};var selectUser=function selectUser(userId){if(selectedUserId===userId)setSelectedUserId(-1);else setSelectedUserId(userId);};var back=function back(){setHelpReportState(function(prevValue){var currentStep=prevValue.currentStep-1;return _objectSpread(_objectSpread({},prevValue),{},{currentStep:currentStep});});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Column,{gap:1,children:[/*#__PURE__*/_jsx(Text,{style:{color:\"var(--test-galaxytext)\"},variant:\"none\",fontSize:4,children:LocalizeText('help.emergency.main.step.two.title')}),availableUsers.length>0&&/*#__PURE__*/_jsx(Text,{style:{color:\"var(--test-galaxytext)\"},variant:\"none\",children:LocalizeText('report.user.pick.user')})]}),/*#__PURE__*/_jsxs(Column,{gap:1,overflow:\"hidden\",children:[!!!availableUsers.length&&/*#__PURE__*/_jsx(Text,{style:{color:\"var(--test-galaxytext)\"},variant:\"none\",children:LocalizeText('report.user.error.nolist')}),availableUsers.length>0&&/*#__PURE__*/_jsx(AutoGrid,{columnCount:1,columnMinHeight:25,gap:1,children:availableUsers.map(function(user,index){return/*#__PURE__*/_jsx(LayoutGridItem,{onClick:function onClick(event){return selectUser(user.id);},itemActive:selectedUserId===user.id,children:/*#__PURE__*/_jsx(\"span\",{dangerouslySetInnerHTML:{__html:user.username}})},user.id);})})]}),/*#__PURE__*/_jsxs(Flex,{gap:2,justifyContent:\"between\",children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:back,children:LocalizeText('generic.back')}),/*#__PURE__*/_jsx(Button,{disabled:selectedUserId<=0,onClick:submitUser,children:LocalizeText('help.emergency.main.submit.button')})]})]});};","map":null,"metadata":{},"sourceType":"module"}