{"ast":null,"code":"import{useEffect}from'react';import useEventCallback from'./useEventCallback';/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */export default function useEventListener(eventTarget,event,listener,capture){if(capture===void 0){capture=false;}var handler=useEventCallback(listener);useEffect(function(){var target=typeof eventTarget==='function'?eventTarget():eventTarget;target.addEventListener(event,handler,capture);return function(){return target.removeEventListener(event,handler,capture);};},[eventTarget]);}","map":null,"metadata":{},"sourceType":"module"}