{"ast":null,"code":"import _classCallCheck from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _get from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/get.js\";import _getPrototypeOf from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";import _inherits from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import{NitroLogger}from'../../../core/common/logger/NitroLogger';import{NitroManager}from'../../../core/common/NitroManager';import{SocketConnectionEvent}from'../../../core/communication/events/SocketConnectionEvent';import{Nitro}from'../../Nitro';import{ClientPingEvent}from'../messages/incoming/client/ClientPingEvent';import{AuthenticatedEvent}from'../messages/incoming/security/AuthenticatedEvent';import{ClientHelloMessageComposer}from'../messages/outgoing/handshake/ClientHelloMessageComposer';import{InfoRetrieveMessageComposer}from'../messages/outgoing/handshake/InfoRetrieveMessageComposer';import{PongMessageComposer}from'../messages/outgoing/handshake/PongMessageComposer';import{SSOTicketMessageComposer}from'../messages/outgoing/handshake/SSOTicketMessageComposer';import{NitroCommunicationDemoEvent}from'./NitroCommunicationDemoEvent';export var NitroCommunicationDemo=/*#__PURE__*/function(_NitroManager){_inherits(NitroCommunicationDemo,_NitroManager);var _super=_createSuper(NitroCommunicationDemo);function NitroCommunicationDemo(communication){var _this;_classCallCheck(this,NitroCommunicationDemo);_this=_super.call(this);_this._communication=void 0;_this._handShaking=void 0;_this._didConnect=void 0;_this._pongInterval=void 0;_this._communication=communication;_this._handShaking=false;_this._didConnect=false;_this._pongInterval=null;_this.onConnectionOpenedEvent=_this.onConnectionOpenedEvent.bind(_assertThisInitialized(_this));_this.onConnectionClosedEvent=_this.onConnectionClosedEvent.bind(_assertThisInitialized(_this));_this.onConnectionErrorEvent=_this.onConnectionErrorEvent.bind(_assertThisInitialized(_this));_this.sendPong=_this.sendPong.bind(_assertThisInitialized(_this));return _this;}_createClass(NitroCommunicationDemo,[{key:\"onInit\",value:function onInit(){var connection=this._communication.connection;if(connection){connection.addEventListener(SocketConnectionEvent.CONNECTION_OPENED,this.onConnectionOpenedEvent);connection.addEventListener(SocketConnectionEvent.CONNECTION_CLOSED,this.onConnectionClosedEvent);connection.addEventListener(SocketConnectionEvent.CONNECTION_ERROR,this.onConnectionErrorEvent);}this._communication.registerMessageEvent(new ClientPingEvent(this.onClientPingEvent.bind(this)));this._communication.registerMessageEvent(new AuthenticatedEvent(this.onAuthenticatedEvent.bind(this)));}},{key:\"onDispose\",value:function onDispose(){var connection=this._communication.connection;if(connection){connection.removeEventListener(SocketConnectionEvent.CONNECTION_OPENED,this.onConnectionOpenedEvent);connection.removeEventListener(SocketConnectionEvent.CONNECTION_CLOSED,this.onConnectionClosedEvent);connection.removeEventListener(SocketConnectionEvent.CONNECTION_ERROR,this.onConnectionErrorEvent);}this._handShaking=false;this.stopPonging();_get(_getPrototypeOf(NitroCommunicationDemo.prototype),\"onDispose\",this).call(this);}},{key:\"onConnectionOpenedEvent\",value:function onConnectionOpenedEvent(event){var connection=this._communication.connection;if(!connection)return;this._didConnect=true;this.dispatchCommunicationDemoEvent(NitroCommunicationDemoEvent.CONNECTION_ESTABLISHED,connection);if(Nitro.instance.getConfiguration('system.pong.manually',false))this.startPonging();this.startHandshake(connection);connection.send(new ClientHelloMessageComposer(null,null,null,null));this.tryAuthentication(connection);}},{key:\"onConnectionClosedEvent\",value:function onConnectionClosedEvent(event){var connection=this._communication.connection;if(!connection)return;this.stopPonging();if(this._didConnect)this.dispatchCommunicationDemoEvent(NitroCommunicationDemoEvent.CONNECTION_CLOSED,connection);}},{key:\"onConnectionErrorEvent\",value:function onConnectionErrorEvent(event){var connection=this._communication.connection;if(!connection)return;this.stopPonging();this.dispatchCommunicationDemoEvent(NitroCommunicationDemoEvent.CONNECTION_ERROR,connection);}},{key:\"tryAuthentication\",value:function tryAuthentication(connection){if(!connection||!this.getSSO()){if(!this.getSSO()){NitroLogger.log('Login without an SSO ticket is not supported');}this.dispatchCommunicationDemoEvent(NitroCommunicationDemoEvent.CONNECTION_HANDSHAKE_FAILED,connection);return;}connection.send(new SSOTicketMessageComposer(this.getSSO(),Nitro.instance.time));}},{key:\"onClientPingEvent\",value:function onClientPingEvent(event){if(!event||!event.connection)return;this.sendPong(event.connection);}},{key:\"onAuthenticatedEvent\",value:function onAuthenticatedEvent(event){if(!event||!event.connection)return;this.completeHandshake(event.connection);this.dispatchCommunicationDemoEvent(NitroCommunicationDemoEvent.CONNECTION_AUTHENTICATED,event.connection);event.connection.send(new InfoRetrieveMessageComposer());}},{key:\"startHandshake\",value:function startHandshake(connection){this.dispatchCommunicationDemoEvent(NitroCommunicationDemoEvent.CONNECTION_HANDSHAKING,connection);this._handShaking=true;}},{key:\"completeHandshake\",value:function completeHandshake(connection){this.dispatchCommunicationDemoEvent(NitroCommunicationDemoEvent.CONNECTION_HANDSHAKED,connection);this._handShaking=false;}},{key:\"startPonging\",value:function startPonging(){this.stopPonging();this._pongInterval=setInterval(this.sendPong,Nitro.instance.getConfiguration('system.pong.interval.ms',20000));}},{key:\"stopPonging\",value:function stopPonging(){if(!this._pongInterval)return;clearInterval(this._pongInterval);this._pongInterval=null;}},{key:\"sendPong\",value:function sendPong(){var connection=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;connection=connection||this._communication.connection||null;if(!connection)return;connection.send(new PongMessageComposer());}},{key:\"dispatchCommunicationDemoEvent\",value:function dispatchCommunicationDemoEvent(type,connection){Nitro.instance.events.dispatchEvent(new NitroCommunicationDemoEvent(type,connection));}},{key:\"getSSO\",value:function getSSO(){return Nitro.instance.getConfiguration('sso.ticket',null);}}]);return NitroCommunicationDemo;}(NitroManager);","map":null,"metadata":{},"sourceType":"module"}