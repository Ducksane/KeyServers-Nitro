{"ast":null,"code":"import _createForOfIteratorHelper from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _classCallCheck from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/Luis/Downloads/Habboom/Nitro-Edit/node_modules/@babel/runtime/helpers/esm/createClass.js\";import{RoomUnitStatusAction}from'./RoomUnitStatusAction';import{RoomUnitStatusMessage}from'./RoomUnitStatusMessage';export var RoomUnitStatusParser=/*#__PURE__*/function(){function RoomUnitStatusParser(){_classCallCheck(this,RoomUnitStatusParser);this._statuses=void 0;}_createClass(RoomUnitStatusParser,[{key:\"flush\",value:function flush(){this._statuses=[];return true;}},{key:\"parse\",value:function parse(wrapper){if(!wrapper)return false;var totalUnits=wrapper.readInt();while(totalUnits>0){var status=this.parseStatus(wrapper);if(!status){totalUnits--;continue;}this._statuses.push(status);totalUnits--;}return true;}},{key:\"parseStatus\",value:function parseStatus(wrapper){if(!wrapper)return null;var unitId=wrapper.readInt();var x=wrapper.readInt();var y=wrapper.readInt();var z=parseFloat(wrapper.readString());var headDirection=wrapper.readInt()%8*45;var direction=wrapper.readInt()%8*45;var actions=wrapper.readString();var targetX=0;var targetY=0;var targetZ=0;var height=0;var canStandUp=false;var didMove=false;var isSlide=false;if(actions){var actionParts=actions.split('/');var statusActions=[];var _iterator=_createForOfIteratorHelper(actionParts),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var action=_step.value;var parts=action.split(' ');if(parts[0]==='')continue;if(parts.length>=2){switch(parts[0]){case'mv':{var values=parts[1].split(',');if(values.length>=3){targetX=parseInt(values[0]);targetY=parseInt(values[1]);targetZ=parseFloat(values[2]);didMove=true;}break;}case'sit':{var sitHeight=parseFloat(parts[1]);if(parts.length>=3)canStandUp=parts[2]==='1';height=sitHeight;break;}case'lay':{var layHeight=parseFloat(parts[1]);height=Math.abs(layHeight);break;}}statusActions.push(new RoomUnitStatusAction(parts[0],parts[1]));}}// const totalActions = actionParts.length;\n// if(totalActions)\n// {\n//     for(let i = 0; i < totalActions; i++)\n//     {\n//         const action = actionParts[i];\n//         if(!action) continue;\n//         console.log(action);\n//         const [ key, value, extra ] = action.split(' ');\n//         if(!key || !value) continue;\n//         switch(key)\n//         {\n//             case 'mv':\n//                 [ targetX, targetY, targetZ ] = value.split(',').map(a => parseFloat(a));\n//                 didMove = true;\n//                 break;\n//             case 'sit': {\n//                 const sitHeight = parseFloat(value);\n//                 if(extra !== undefined) canStandUp = value === '1';\n//                 height = sitHeight;\n//                 break;\n//             }\n//             case 'lay': {\n//                 const layHeight = parseFloat(value);\n//                 height = layHeight;\n//                 break;\n//             }\n//         }\n//         statusActions.push(new RoomUnitStatusAction(key, value));\n//     }\n// }\n}catch(err){_iterator.e(err);}finally{_iterator.f();}this._statuses.push(new RoomUnitStatusMessage(unitId,x,y,z,height,headDirection,direction,targetX,targetY,targetZ,didMove,canStandUp,statusActions));}}},{key:\"statuses\",get:function get(){return this._statuses;}}]);return RoomUnitStatusParser;}();","map":null,"metadata":{},"sourceType":"module"}