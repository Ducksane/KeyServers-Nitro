{"ast":null,"code":"import _objectSpread from\"C:/Users/Administrator/Desktop/nitro/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"C:/Users/Administrator/Desktop/nitro/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _toConsumableArray from\"C:/Users/Administrator/Desktop/nitro/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";var _excluded=[\"as\",\"bsPrefix\",\"className\",\"onClick\"];import*as React from'react';import{useContext}from'react';import classNames from'classnames';import AccordionContext,{isAccordionItemSelected}from'./AccordionContext';import AccordionItemContext from'./AccordionItemContext';import{useBootstrapPrefix}from'./ThemeProvider';import{jsx as _jsx}from\"react/jsx-runtime\";export function useAccordionButton(eventKey,onClick){var _useContext=useContext(AccordionContext),activeEventKey=_useContext.activeEventKey,onSelect=_useContext.onSelect,alwaysOpen=_useContext.alwaysOpen;return function(e){/*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */var eventKeyPassed=eventKey===activeEventKey?null:eventKey;if(alwaysOpen){if(Array.isArray(activeEventKey)){if(activeEventKey.includes(eventKey)){eventKeyPassed=activeEventKey.filter(function(k){return k!==eventKey;});}else{eventKeyPassed=[].concat(_toConsumableArray(activeEventKey),[eventKey]);}}else{// activeEventKey is undefined.\neventKeyPassed=[eventKey];}}onSelect==null?void 0:onSelect(eventKeyPassed,e);onClick==null?void 0:onClick(e);};}var AccordionButton=/*#__PURE__*/React.forwardRef(function(_ref,ref){var _ref$as=_ref.as,Component=_ref$as===void 0?'button':_ref$as,bsPrefix=_ref.bsPrefix,className=_ref.className,onClick=_ref.onClick,props=_objectWithoutProperties(_ref,_excluded);bsPrefix=useBootstrapPrefix(bsPrefix,'accordion-button');var _useContext2=useContext(AccordionItemContext),eventKey=_useContext2.eventKey;var accordionOnClick=useAccordionButton(eventKey,onClick);var _useContext3=useContext(AccordionContext),activeEventKey=_useContext3.activeEventKey;if(Component==='button'){props.type='button';}return/*#__PURE__*/_jsx(Component,_objectSpread(_objectSpread({ref:ref,onClick:accordionOnClick},props),{},{\"aria-expanded\":eventKey===activeEventKey,className:classNames(className,bsPrefix,!isAccordionItemSelected(activeEventKey,eventKey)&&'collapsed')}));});AccordionButton.displayName='AccordionButton';export default AccordionButton;","map":null,"metadata":{},"sourceType":"module"}