{"ast":null,"code":"import _slicedToArray from\"C:/Users/Administrator/Desktop/nitro/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _excluded=[\"children\"];function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import{useContext,useRef}from'react';import*as React from'react';import useCallbackRef from'@restart/hooks/useCallbackRef';import DropdownContext from'./DropdownContext';import usePopper from'./usePopper';import useClickOutside from'./useClickOutside';import mergeOptionsWithPopperConfig from'./mergeOptionsWithPopperConfig';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var noop=function noop(){};/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */export function useDropdownMenu(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var context=useContext(DropdownContext);var _useCallbackRef=useCallbackRef(),_useCallbackRef2=_slicedToArray(_useCallbackRef,2),arrowElement=_useCallbackRef2[0],attachArrowRef=_useCallbackRef2[1];var hasShownRef=useRef(false);var flip=options.flip,offset=options.offset,rootCloseEvent=options.rootCloseEvent,_options$fixed=options.fixed,fixed=_options$fixed===void 0?false:_options$fixed,placementOverride=options.placement,_options$popperConfig=options.popperConfig,popperConfig=_options$popperConfig===void 0?{}:_options$popperConfig,_options$enableEventL=options.enableEventListeners,enableEventListeners=_options$enableEventL===void 0?true:_options$enableEventL,_options$usePopper=options.usePopper,shouldUsePopper=_options$usePopper===void 0?!!context:_options$usePopper;var show=(context==null?void 0:context.show)==null?!!options.show:context.show;if(show&&!hasShownRef.current){hasShownRef.current=true;}var handleClose=function handleClose(e){context==null?void 0:context.toggle(false,e);};var _ref2=context||{},placement=_ref2.placement,setMenu=_ref2.setMenu,menuElement=_ref2.menuElement,toggleElement=_ref2.toggleElement;var popper=usePopper(toggleElement,menuElement,mergeOptionsWithPopperConfig({placement:placementOverride||placement||'bottom-start',enabled:shouldUsePopper,enableEvents:enableEventListeners==null?show:enableEventListeners,offset:offset,flip:flip,fixed:fixed,arrowElement:arrowElement,popperConfig:popperConfig}));var menuProps=Object.assign({ref:setMenu||noop,'aria-labelledby':toggleElement==null?void 0:toggleElement.id},popper.attributes.popper,{style:popper.styles.popper});var metadata={show:show,placement:placement,hasShown:hasShownRef.current,toggle:context==null?void 0:context.toggle,popper:shouldUsePopper?popper:null,arrowProps:shouldUsePopper?Object.assign({ref:attachArrowRef},popper.attributes.arrow,{style:popper.styles.arrow}):{}};useClickOutside(menuElement,handleClose,{clickTrigger:rootCloseEvent,disabled:!show});return[menuProps,metadata];}var defaultProps={usePopper:true};/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */function DropdownMenu(_ref){var children=_ref.children,options=_objectWithoutPropertiesLoose(_ref,_excluded);var _useDropdownMenu=useDropdownMenu(options),_useDropdownMenu2=_slicedToArray(_useDropdownMenu,2),props=_useDropdownMenu2[0],meta=_useDropdownMenu2[1];return/*#__PURE__*/_jsx(_Fragment,{children:children(props,meta)});}DropdownMenu.displayName='DropdownMenu';DropdownMenu.defaultProps=defaultProps;/** @component */export default DropdownMenu;","map":null,"metadata":{},"sourceType":"module"}