{"ast":null,"code":"/*!\n * @pixi/canvas-display - v6.3.0\n * Compiled Wed, 23 Mar 2022 18:58:56 UTC\n *\n * @pixi/canvas-display is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */import{Container,DisplayObject}from'@pixi/display';/**\n * To be overridden by the subclass\n * @method _renderCanvas\n * @memberof PIXI.Container#\n * @protected\n * @param {PIXI.CanvasRenderer} renderer - The renderer\n */Container.prototype._renderCanvas=function _renderCanvas(_renderer){// this is where content itself gets rendered...\n};/**\n * Renders the object using the Canvas renderer\n * @method renderCanvas\n * @memberof PIXI.Container#\n * @param {PIXI.CanvasRenderer} renderer - The renderer\n */Container.prototype.renderCanvas=function renderCanvas(renderer){// if not visible or the alpha is 0 then no need to render this\nif(!this.visible||this.worldAlpha<=0||!this.renderable){return;}if(this._mask){renderer.maskManager.pushMask(this._mask);}this._renderCanvas(renderer);for(var i=0,j=this.children.length;i<j;++i){this.children[i].renderCanvas(renderer);}if(this._mask){renderer.maskManager.popMask(renderer);}};/**\n * Renders the object using the Canvas renderer\n * @method renderCanvas\n * @memberof PIXI.Container#\n * @param {PIXI.CanvasRenderer} renderer - The renderer\n */DisplayObject.prototype.renderCanvas=function renderCanvas(_renderer){// OVERWRITE;\n};","map":null,"metadata":{},"sourceType":"module"}