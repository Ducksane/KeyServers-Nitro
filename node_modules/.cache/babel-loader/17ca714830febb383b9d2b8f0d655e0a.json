{"ast":null,"code":"import _classCallCheck from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/muphy/Documents/habboom/Nitro-Edit-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";import{AdvancedMap}from'../core/utils/AdvancedMap';import{RoomObject}from'./object/RoomObject';export var RoomObjectManager=/*#__PURE__*/function(){function RoomObjectManager(){_classCallCheck(this,RoomObjectManager);this._objects=void 0;this._objectsPerType=void 0;this._objects=new AdvancedMap();this._objectsPerType=new AdvancedMap();}_createClass(RoomObjectManager,[{key:\"dispose\",value:function dispose(){this.removeAllObjects();}},{key:\"getObject\",value:function getObject(id){var object=this._objects.getValue(id);if(!object)return null;return object;}},{key:\"getObjectByIndex\",value:function getObjectByIndex(index){var object=this._objects.getWithIndex(index);if(!object)return null;return object;}},{key:\"createObject\",value:function createObject(id,stateCount,type){var object=new RoomObject(id,stateCount,type);return this.addObject(id,type,object);}},{key:\"addObject\",value:function addObject(id,type,object){if(this._objects.getValue(id)){object.dispose();return null;}this._objects.add(id,object);var typeMap=this.getTypeMap(type);if(typeMap)typeMap.add(id,object);return object;}},{key:\"removeObject\",value:function removeObject(id){var object=this._objects.remove(id);if(object){var typeMap=this.getTypeMap(object.type);if(typeMap)typeMap.remove(object.id);object.dispose();}}},{key:\"removeAllObjects\",value:function removeAllObjects(){var i=0;while(i<this._objects.length){var object=this._objects.getWithIndex(i);if(object)object.dispose();i++;}this._objects.reset();i=0;while(i<this._objectsPerType.length){var typeMap=this._objectsPerType.getWithIndex(i);if(typeMap)typeMap.dispose();i++;}this._objectsPerType.reset();}},{key:\"getTypeMap\",value:function getTypeMap(k){var _arg_2=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var existing=this._objectsPerType.getValue(k);if(!existing&&_arg_2){existing=new AdvancedMap();this._objectsPerType.add(k,existing);}return existing;}},{key:\"objects\",get:function get(){return this._objects;}},{key:\"totalObjects\",get:function get(){return this._objects.length;}}]);return RoomObjectManager;}();","map":null,"metadata":{},"sourceType":"module"}