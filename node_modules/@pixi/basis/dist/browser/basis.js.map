{"version":3,"file":"basis.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../src/Basis.ts","../../src/TranscoderWorkerWrapper.ts","../../src/TranscoderWorker.ts","../../src/BasisLoader.ts","../../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { TYPES } from '@pixi/constants';\nimport { INTERNAL_FORMATS } from '@pixi/compressed-textures';\n\n/**\n * The transcoding formats provided by basis_universal.\n *\n * NOTE: Not all of these formats are supported on WebGL!\n *\n * @ignore\n */\n/* eslint-disable camelcase */\nexport enum BASIS_FORMATS {\n    cTFETC1 = 0,\n    cTFETC2 = 1,\n    cTFBC1 = 2,\n    cTFBC3 = 3,\n    cTFBC4 = 4,\n    cTFBC5 = 5,\n    cTFBC7 = 6,\n    cTFPVRTC1_4_RGB = 8,\n    cTFPVRTC1_4_RGBA = 9,\n    cTFASTC_4x4 = 10,\n    cTFATC_RGB = 11,\n    cTFATC_RGBA_INTERPOLATED_ALPHA = 12,\n    cTFRGBA32 = 13,\n    cTFRGB565 = 14,\n    cTFBGR565 = 15,\n    cTFRGBA4444 = 16,\n}\n/* eslint-enable camelcase */\n\n/**\n * Maps {@link BASIS_FORMATS} to {@link PIXI.INTERNAL_FORMATS}\n *\n * @ignore\n */\nexport const BASIS_FORMAT_TO_INTERNAL_FORMAT: { [id: number]: INTERNAL_FORMATS } = {\n    [BASIS_FORMATS.cTFETC1]: INTERNAL_FORMATS.COMPRESSED_RGB_ETC1_WEBGL,\n    [BASIS_FORMATS.cTFBC1]: INTERNAL_FORMATS.COMPRESSED_RGB_S3TC_DXT1_EXT,\n    [BASIS_FORMATS.cTFBC3]: INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT5_EXT,\n    [BASIS_FORMATS.cTFPVRTC1_4_RGB]: INTERNAL_FORMATS.COMPRESSED_RGB_PVRTC_4BPPV1_IMG,\n    [BASIS_FORMATS.cTFPVRTC1_4_RGBA]: INTERNAL_FORMATS.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\n    [BASIS_FORMATS.cTFATC_RGB]: INTERNAL_FORMATS.COMPRESSED_RGB_ATC_WEBGL,\n    [BASIS_FORMATS.cTFASTC_4x4]: INTERNAL_FORMATS.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL\n};\n\n/**\n * Maps {@link BASIS_FORMATS} to {@link PIXI.TYPES}. These formats are a fallback when the basis file cannot be transcoded\n * to a valid compressed texture format.\n *\n * NOTE: {@link BASIS_FORMATS.cTFBGR565} is not supported, while {@link BASIS_FORMATS.cTFRGBA4444} is not implemented by\n *  [at]pixi/basis.\n *\n * @ignore\n */\nexport const BASIS_FORMAT_TO_TYPE: { [id: number]: TYPES } = {\n    [BASIS_FORMATS.cTFRGBA32]: TYPES.UNSIGNED_BYTE,\n    [BASIS_FORMATS.cTFRGB565]: TYPES.UNSIGNED_SHORT_5_6_5,\n    [BASIS_FORMATS.cTFRGBA4444]: TYPES.UNSIGNED_SHORT_4_4_4_4\n};\n\n/**\n * Maps {@link PIXI.INTERNAL_FORMATS} to {@link BASIS_FORMATS}\n *\n * @ignore\n */\nexport const INTERNAL_FORMAT_TO_BASIS_FORMAT: { [id: number]: number }\n    = (Object.keys(BASIS_FORMAT_TO_INTERNAL_FORMAT) as string[])\n        .map((key: string) => Number(key))\n        .reduce((reverseMap: any, basisFormat: any) =>\n        {\n            reverseMap[(BASIS_FORMAT_TO_INTERNAL_FORMAT as any)[basisFormat]] = basisFormat;\n\n            return reverseMap;\n        }, {});\n\n/**\n * Enumerates the basis formats with alpha components\n *\n * @ignore\n */\nexport const BASIS_FORMATS_ALPHA: { [id: number]: boolean } = {\n    [BASIS_FORMATS.cTFBC3]: true,\n    [BASIS_FORMATS.cTFPVRTC1_4_RGBA]: true,\n    [BASIS_FORMATS.cTFASTC_4x4]: true\n};\n\n/**\n * Binding to C++ {@code BasisFile} wrapper class.\n *\n * @see https://github.com/BinomialLLC/basis_universal/blob/master/webgl/transcoder/basis_wrappers.cpp\n * @private\n */\nexport declare class BasisFile\n{\n    constructor(buffer: Uint8Array);\n    getNumImages(): number;\n    getNumLevels(imageId: number): number;\n    getImageWidth(imageId: number, level: number): number;\n    getImageHeight(imageId: number, level: number): number;\n    getHasAlpha(): boolean;\n    startTranscoding(): boolean;\n    getImageTranscodedSizeInBytes(\n        imageId: number,\n        level: number,\n        basisFormat: number): number;\n    transcodeImage(dstBuff: Uint8Array,\n        imageId: number,\n        level: number,\n        basisFormat: BASIS_FORMATS,\n        pvrtcWrapAddressing: boolean,\n        getAlphaForOpaqueFormats: boolean): number;\n    close(): void;\n    delete(): void;\n}\n\n// Missing typings? - https://github.com/microsoft/TypeScript/issues/39655\n/**\n * Compressed texture extensions relevant to the formats into which Basis can decompress into.\n *\n * @ignore\n */\n/* eslint-disable camelcase */\nexport type BasisTextureExtensions = {\n    s3tc?: WEBGL_compressed_texture_s3tc,\n    s3tc_sRGB: WEBGL_compressed_texture_s3tc_srgb,\n    etc: any,\n    etc1: any,\n    pvrtc: any,\n    atc: any,\n    astc: WEBGL_compressed_texture_astc\n};\n/* eslint-enable camelcase */\n\n/**\n * API provided by basis_universal WebGL library.\n *\n * @ignore\n */\nexport type BasisBinding = {\n    BasisFile: typeof BasisFile,\n    initializeBasis(): void\n};\n\n/**\n * Binding to basis_universal WebGL library.\n *\n * @see https://github.com/BinomialLLC/basis_universal/blob/master/webgl/transcoder/build/basis_transcoder.js\n * @ignore\n */\nexport type BASIS = (opts?: { wasmBinary: ArrayBuffer }) => Promise<BasisBinding>;\n","import type { BASIS, BASIS_FORMATS, BasisBinding } from './Basis';\n\n/**\n * Initialization message sent by the main thread.\n * @ignore\n */\nexport interface IInitializeTranscoderMessage {\n    wasmSource: ArrayBuffer;\n    type: 'init';\n}\n\n/**\n * Request parameters for transcoding basis files. It only supports transcoding all of the basis file at once.\n * @ignore\n */\nexport interface ITranscodeMessage\n{\n    requestID?: number;\n    rgbFormat: number;\n    rgbaFormat?: number;\n    basisData?: Uint8Array;\n    type: 'transcode';\n}\n\n/** @ignore */\nexport interface ITranscodedImage {\n    imageID: number;\n    levelArray: Array<{\n        levelID: number,\n        levelWidth: number,\n        levelHeight: number,\n        levelBuffer: Uint8Array\n    }>;\n    width: number;\n    height: number;\n}\n\n/**\n * Response format for {@link TranscoderWorker}.\n * @ignore\n */\nexport interface ITranscodeResponse {\n    type: 'init' | 'transcode';\n    requestID?: number;\n    success: boolean;\n    basisFormat?: BASIS_FORMATS;\n    imageArray?: Array<{\n        imageID: number,\n        levelArray: Array<{\n            levelID: number,\n            levelWidth: number,\n            levelHeight: number,\n            levelBuffer: Uint8Array\n        }>,\n        width: number,\n        height: number\n    }>;\n}\n\ndeclare global {\n    interface Window {\n        BASIS: BASIS;\n    }\n}\n\n/**\n * This wraps the transcoder web-worker functionality; it can be converted into a string to get the source code. It expects\n * you to prepend the transcoder JavaScript code so that the `BASIS` namespace is available.\n *\n * The transcoder worker responds to two types of messages: \"init\" and \"transcode\". You must always send the first \"init\"\n * {@link IInitializeTranscoderMessage} message with the WebAssembly binary; if the transcoder is successfully initialized,\n * the web-worker will respond by sending another {@link ITranscodeResponse} message with `success: true`.\n *\n * @ignore\n */\nexport function TranscoderWorkerWrapper(): void\n{\n    let basisBinding: BasisBinding;\n\n    const messageHandlers = {\n        init: (message: IInitializeTranscoderMessage): ITranscodeResponse =>\n        {\n            if (!self.BASIS)\n            {\n                console.warn('jsSource was not prepended?');\n\n                return {\n                    type: 'init',\n                    success: false\n                };\n            }\n\n            self.BASIS({ wasmBinary: message.wasmSource }).then((basisLibrary) =>\n            {\n                basisLibrary.initializeBasis();\n                basisBinding = basisLibrary;\n\n                (self as any).postMessage({\n                    type: 'init',\n                    success: true\n                });\n            });\n\n            return null;\n        },\n        transcode(message: ITranscodeMessage): ITranscodeResponse\n        {\n            const basisData = message.basisData;\n            const BASIS = basisBinding;\n\n            const data = basisData;\n            const basisFile = new BASIS.BasisFile(data);\n            const imageCount = basisFile.getNumImages();\n            const hasAlpha = basisFile.getHasAlpha();\n\n            const basisFormat = hasAlpha\n                ? message.rgbaFormat\n                : message.rgbFormat;\n            const basisFallbackFormat = 14;// BASIS_FORMATS.cTFRGB565 (cannot import values into web-worker!)\n            const imageArray = new Array(imageCount);\n\n            let fallbackMode = false;\n\n            if (!basisFile.startTranscoding())\n            {\n                basisFile.close();\n                basisFile.delete();\n\n                return {\n                    type: 'transcode',\n                    requestID: message.requestID,\n                    success: false,\n                    imageArray: null\n                };\n            }\n\n            for (let i = 0; i < imageCount; i++)\n            {\n                const levels = basisFile.getNumLevels(i);\n                const imageResource: ITranscodedImage = {\n                    imageID: i,\n                    levelArray: new Array<{\n                        levelID: number,\n                        levelWidth: number,\n                        levelHeight: number,\n                        levelBuffer: Uint8Array\n                    }>(),\n                    width: null,\n                    height: null\n                };\n\n                for (let j = 0; j < levels; j++)\n                {\n                    const format = !fallbackMode ? basisFormat : basisFallbackFormat;\n\n                    const width = basisFile.getImageWidth(i, j);\n                    const height = basisFile.getImageHeight(i, j);\n                    const byteSize = basisFile.getImageTranscodedSizeInBytes(i, j, format);\n\n                    const alignedWidth = (width + 3) & ~3;\n                    const alignedHeight = (height + 3) & ~3;\n\n                    // Level 0 is texture's actual width, height\n                    if (j === 0)\n                    {\n                        imageResource.width = alignedWidth;\n                        imageResource.height = alignedHeight;\n                    }\n\n                    const imageBuffer = new Uint8Array(byteSize);\n\n                    if (!basisFile.transcodeImage(imageBuffer, i, j, format, false, false))\n                    {\n                        if (fallbackMode)\n                        {\n                            // We failed in fallback mode as well!\n                            console.error(`Basis failed to transcode image ${i}, level ${j}!`);\n\n                            return { type: 'transcode', requestID: message.requestID, success: false };\n                        }\n\n                        /* eslint-disable-next-line max-len */\n                        console.warn(`Basis failed to transcode image ${i}, level ${j}! Retrying to an uncompressed texture format!`);\n                        i = -1;\n                        fallbackMode = true;\n\n                        break;\n                    }\n\n                    imageResource.levelArray.push({\n                        levelID: j,\n                        levelWidth: width,\n                        levelHeight: height,\n                        levelBuffer: imageBuffer\n                    });\n                }\n\n                imageArray[i] = imageResource;\n            }\n\n            basisFile.close();\n            basisFile.delete();\n\n            return {\n                type: 'transcode',\n                requestID: message.requestID,\n                success: true,\n                basisFormat: !fallbackMode ? basisFormat : basisFallbackFormat,\n                imageArray\n            };\n        }\n    };\n\n    self.onmessage = (e: { data: Partial<IInitializeTranscoderMessage | ITranscodeMessage> }): void =>\n    {\n        const msg = e.data;\n        const response = messageHandlers[msg.type](msg as any);\n\n        if (response)\n        {\n            (self as any).postMessage(response);\n        }\n    };\n}\n","import { Runner } from '@pixi/runner';\nimport { BASIS_FORMATS } from './Basis';\nimport { ITranscodeResponse, TranscoderWorkerWrapper } from './TranscoderWorkerWrapper';\n\n/**\n * Worker class for transcoding *.basis files in background threads.\n *\n * To enable asynchronous transcoding, you need to provide the URL to the basis_universal transcoding\n * library.\n *\n * @memberof PIXI.BasisLoader\n */\nexport class TranscoderWorker\n{\n    // IMPLEMENTATION NOTE: TranscoderWorker tracks transcoding requests with a requestID; the worker can be issued\n    // multiple requests (once it is initialized) and the response contains the requestID of the triggering request. Based on\n    // the response, the transcodeAsync promise is fulfilled or rejected.\n\n    // TODO: Publish our own @pixi/basis package & set default URL to jsdelivr/cdnjs\n    /** URL for the script containing the basis_universal library. */\n    static bindingURL: string;\n    static jsSource: string;\n    static wasmSource: ArrayBuffer;\n\n    public static onTranscoderInitialized = new Runner('onTranscoderInitialized');\n\n    isInit: boolean;\n    load: number;\n    requests: { [id: number]: {\n        resolve: (data: ITranscodeResponse) => void,\n        reject: () => void\n    } } = {};\n\n    private static _workerURL: string;\n    private static _tempID = 0;\n\n    /** Generated URL for the transcoder worker script. */\n    static get workerURL(): string\n    {\n        if (!TranscoderWorker._workerURL)\n        {\n            let workerSource = TranscoderWorkerWrapper.toString();\n\n            const beginIndex = workerSource.indexOf('{');\n            const endIndex = workerSource.lastIndexOf('}');\n\n            workerSource = workerSource.slice(beginIndex + 1, endIndex);\n\n            if (TranscoderWorker.jsSource)\n            {\n                workerSource = `${TranscoderWorker.jsSource}\\n${workerSource}`;\n            }\n\n            TranscoderWorker._workerURL = URL.createObjectURL(new Blob([workerSource]));\n        }\n\n        return TranscoderWorker._workerURL;\n    }\n\n    protected worker: Worker;\n    protected initPromise: Promise<void>;\n    protected onInit: () => void;\n\n    constructor()\n    {\n        this.isInit = false;\n        this.load = 0;\n        this.initPromise = new Promise((resolve) => { this.onInit = resolve; });\n\n        if (!TranscoderWorker.wasmSource)\n        {\n            console.warn('PIXI.resources.BasisResource.TranscoderWorker has not been given the transcoder WASM binary!');\n        }\n\n        this.worker = new Worker(TranscoderWorker.workerURL);\n        this.worker.onmessage = this.onMessage;\n        this.worker.postMessage({\n            type: 'init',\n            jsSource: TranscoderWorker.jsSource,\n            wasmSource: TranscoderWorker.wasmSource\n        });\n    }\n\n    /** @returns a promise that is resolved when the web-worker is initialized */\n    initAsync(): Promise<void>\n    {\n        return this.initPromise;\n    }\n\n    /**\n     * Creates a promise that will resolve when the transcoding of a *.basis file is complete.\n     * @param basisData - *.basis file contents\n     * @param rgbaFormat - transcoding format for RGBA files\n     * @param rgbFormat - transcoding format for RGB files\n     * @returns a promise that is resolved with the transcoding response of the web-worker\n     */\n    async transcodeAsync(\n        basisData: Uint8Array,\n        rgbaFormat: BASIS_FORMATS,\n        rgbFormat: BASIS_FORMATS\n    ): Promise<ITranscodeResponse>\n    {\n        ++this.load;\n\n        const requestID = TranscoderWorker._tempID++;\n        const requestPromise = new Promise((resolve: (data: ITranscodeResponse) => void, reject: () => void) =>\n        {\n            this.requests[requestID] = {\n                resolve,\n                reject\n            };\n        });\n\n        this.worker.postMessage({\n            requestID,\n            basisData,\n            rgbaFormat,\n            rgbFormat,\n            type: 'transcode'\n        });\n\n        return requestPromise;\n    }\n\n    /**\n     * Handles responses from the web-worker\n     *\n     * @param e - a message event containing the transcoded response\n     */\n    protected onMessage = (e: MessageEvent): void =>\n    {\n        const data = e.data as ITranscodeResponse;\n\n        if (data.type === 'init')\n        {\n            if (!data.success)\n            {\n                throw new Error('BasisResource.TranscoderWorker failed to initialize.');\n            }\n\n            this.isInit = true;\n            this.onInit();\n        }\n        else if (data.type === 'transcode')\n        {\n            --this.load;\n\n            const requestID = data.requestID;\n\n            if (data.success)\n            {\n                this.requests[requestID].resolve(data);\n            }\n            else\n            {\n                this.requests[requestID].reject();\n            }\n\n            delete this.requests[requestID];\n        }\n    };\n\n    /**\n     * Loads the transcoder source code\n     *\n     * @param jsURL - URL to the javascript basis transcoder\n     * @param wasmURL - URL to the wasm basis transcoder\n     * @returns A promise that resolves when both the js and wasm transcoders have been loaded.\n     */\n    static loadTranscoder(jsURL: string, wasmURL: string): Promise<[void, void]>\n    {\n        const jsPromise = fetch(jsURL)\n            .then((res: Response) => res.text())\n            .then((text: string) => { TranscoderWorker.jsSource = text; });\n        const wasmPromise = fetch(wasmURL)\n            .then((res: Response) => res.arrayBuffer())\n            .then((arrayBuffer: ArrayBuffer) => { TranscoderWorker.wasmSource = arrayBuffer; });\n\n        return Promise.all([jsPromise, wasmPromise]).then((data) =>\n        {\n            TranscoderWorker.onTranscoderInitialized.emit();\n\n            return data;\n        });\n    }\n\n    /**\n     * Set the transcoder source code directly\n     *\n     * @param jsSource - source for the javascript basis transcoder\n     * @param wasmSource - source for the wasm basis transcoder\n     */\n    static setTranscoder(jsSource: string, wasmSource: ArrayBuffer): void\n    {\n        TranscoderWorker.jsSource = jsSource;\n        TranscoderWorker.wasmSource = wasmSource;\n    }\n}\n","import { TYPES, MIPMAP_MODES, ALPHA_MODES, FORMATS } from '@pixi/constants';\nimport { BaseTexture, BufferResource, Texture } from '@pixi/core';\nimport { CompressedTextureResource, INTERNAL_FORMATS } from '@pixi/compressed-textures';\nimport {\n    BASIS_FORMATS,\n    BASIS_FORMAT_TO_INTERNAL_FORMAT,\n    INTERNAL_FORMAT_TO_BASIS_FORMAT,\n    BASIS_FORMATS_ALPHA,\n    BasisTextureExtensions,\n    BasisBinding,\n    BASIS_FORMAT_TO_TYPE\n} from './Basis';\nimport { TranscoderWorker } from './TranscoderWorker';\nimport { LoaderResource } from '@pixi/loaders';\n\nimport type { IResourceMetadata } from '@pixi/loaders';\nimport type { CompressedLevelBuffer } from '@pixi/compressed-textures';\n\ntype TranscodedResourcesArray = (Array<CompressedTextureResource> | Array<BufferResource>) & {\n    basisFormat: BASIS_FORMATS\n};\n\n/**\n * Result when calling registerCompressedTextures.\n * @ignore\n */\n type BasisTexturesResult = Pick<LoaderResource, 'textures' | 'texture'>;\n\nLoaderResource.setExtensionXhrType('basis', LoaderResource.XHR_RESPONSE_TYPE.BUFFER);\n\n/**\n * Loader plugin for handling BASIS supercompressed texture files.\n *\n * To use this loader, you must bind the basis_universal WebAssembly transcoder. There are two ways of\n * doing this:\n *\n * 1. Adding a &lt;script&gt; tag to your HTML page to the transcoder bundle in this package, and serving\n * the WASM binary from the same location.\n *\n * ```js\n * // Copy ./node_modules/@pixi/basis/assets/basis_.wasm into your assets directory\n * // as well, so it is served from the same folder as the JavaScript!\n * &lt;script src=\"./node_modules/@pixi/basis/assets/basis_transcoder.js\" /&gt;\n * ```\n *\n * NOTE: `basis_transcoder.js` expects the WebAssembly binary to be named `basis_transcoder.wasm`.\n * NOTE-2: This method supports transcoding on the main-thread. Only use this if you have 1 or 2 *.basis\n * files.\n *\n * 2. Loading the transcoder source from a URL.\n *\n * ```js\n * // Use this if you to use the default CDN url for @pixi/basis\n * BasisLoader.loadTranscoder();\n *\n * // Use this if you want to serve the transcoder on your own\n * BasisLoader.loadTranscoder('./basis_transcoder.js', './basis_transcoder.wasm');\n * ```\n *\n * NOTE: This can only be used with web-workers.\n *\n * @class\n * @memberof PIXI\n * @implements PIXI.ILoaderPlugin\n */\nexport class BasisLoader\n{\n    private static basisBinding: BasisBinding;\n    private static defaultRGBFormat: { basisFormat: BASIS_FORMATS, textureFormat: INTERNAL_FORMATS | TYPES };\n    private static defaultRGBAFormat: { basisFormat: BASIS_FORMATS, textureFormat: INTERNAL_FORMATS | TYPES };\n    private static fallbackMode = false;\n    private static workerPool: TranscoderWorker[] = [];\n\n    /**\n     * Transcodes the *.basis data when the data is loaded. If the transcoder is not bound yet, it\n     * will hook transcoding to {@link BasisResource#onTranscoderInitialized}.\n     *\n     * @see PIXI.Loader.loaderMiddleware\n     * @param resource - loader resource that is checked to see if it is a basis file\n     * @param next - callback Function to call when done\n     */\n    public static use(resource: LoaderResource, next: (...args: any[]) => void): void\n    {\n        if (resource.extension === 'basis' && resource.data)\n        {\n            if (!!BasisLoader.basisBinding || (!!BasisLoader.TranscoderWorker.wasmSource))\n            {\n                BasisLoader.transcode(resource, next);\n            }\n            else\n            {\n                TranscoderWorker.onTranscoderInitialized.add(() =>\n                {\n                    BasisLoader.transcode(resource, next);\n                });\n            }\n        }\n        else\n        {\n            next();\n        }\n    }\n\n    /**\n     * Runs transcoding and populates {@link imageArray}. It will run the transcoding in a web worker\n     * if they are available.\n     *\n     * @private\n     */\n    private static async transcode(resource: LoaderResource, next: (...args: any[]) => void): Promise<void>\n    {\n        try\n        {\n            const data: ArrayBuffer = resource.data;\n            let resources: TranscodedResourcesArray;\n\n            if (typeof Worker !== 'undefined' && BasisLoader.TranscoderWorker.wasmSource)\n            {\n                resources = await BasisLoader.transcodeAsync(data);\n            }\n            else\n            {\n                resources = BasisLoader.transcodeSync(data);\n            }\n\n            Object.assign(resource, BasisLoader.registerTextures(\n                resource.url,\n                resources,\n                resource.metadata\n            ));\n        }\n        catch (err)\n        {\n            next(err);\n\n            return;\n        }\n\n        next();\n    }\n\n    /**\n     * Creates textures and adds them to the texture cache\n     * @private\n     * @param url - url of the texture to be used as its ID for the texture cache\n     * @param resources - the transcoded resources\n     * @param metadata - resource metadata\n     */\n    private static registerTextures(\n        url: string,\n        resources: TranscodedResourcesArray,\n        metadata: IResourceMetadata\n    ): BasisTexturesResult\n    {\n        const result: BasisTexturesResult = {\n            textures: {},\n            texture: null,\n        };\n\n        if (!resources)\n        {\n            return result;\n        }\n\n        // Should be a valid TYPES, FORMATS for uncompressed basis formats\n        const type: TYPES = BASIS_FORMAT_TO_TYPE[resources.basisFormat];\n        const format: FORMATS = resources.basisFormat !== BASIS_FORMATS.cTFRGBA32 ? FORMATS.RGB : FORMATS.RGBA;\n        const resourceList = resources as Array<CompressedTextureResource | BufferResource>;\n\n        const textures = resourceList.map((resource) =>\n            (\n                new Texture(new BaseTexture(resource, Object.assign({\n                    mipmap: resource instanceof CompressedTextureResource && resource.levels > 1\n                        ? MIPMAP_MODES.ON_MANUAL\n                        : MIPMAP_MODES.OFF,\n                    alphaMode: ALPHA_MODES.NO_PREMULTIPLIED_ALPHA,\n                    type,\n                    format\n                }, metadata)))\n            ));\n\n        textures.forEach((texture: Texture, i: number) =>\n        {\n            const { baseTexture } = texture;\n            const cacheID = `${url}-${i + 1}`;\n\n            BaseTexture.addToCache(baseTexture, cacheID);\n            Texture.addToCache(texture, cacheID);\n\n            if (i === 0)\n            {\n                BaseTexture.addToCache(baseTexture, url);\n                Texture.addToCache(texture, url);\n                result.texture = texture;\n            }\n\n            result.textures[cacheID] = texture;\n        });\n\n        return result;\n    }\n\n    /**\n     * Finds a suitable worker for transcoding and sends a transcoding request\n     *\n     * @private\n     * @async\n     */\n    private static async transcodeAsync(arrayBuffer: ArrayBuffer): Promise<TranscodedResourcesArray>\n    {\n        const workerPool = BasisLoader.workerPool;\n\n        let leastLoad = 0x10000000;\n        let worker = null;\n\n        for (let i = 0, j = workerPool.length; i < j; i++)\n        {\n            if (workerPool[i].load < leastLoad)\n            {\n                worker = workerPool[i];\n                leastLoad = worker.load;\n            }\n        }\n\n        if (!worker)\n        {\n            /* eslint-disable-next-line no-use-before-define */\n            worker = new TranscoderWorker();\n\n            workerPool.push(worker);\n        }\n\n        // Wait until worker is ready\n        await worker.initAsync();\n\n        const response = await worker.transcodeAsync(\n            new Uint8Array(arrayBuffer),\n            BasisLoader.defaultRGBAFormat.basisFormat,\n            BasisLoader.defaultRGBFormat.basisFormat\n        );\n\n        const basisFormat = response.basisFormat;\n        const imageArray = response.imageArray;\n\n        // whether it is an uncompressed format\n        const fallbackMode = basisFormat > 12;\n        let imageResources: TranscodedResourcesArray;\n\n        if (!fallbackMode)\n        {\n            const format = BASIS_FORMAT_TO_INTERNAL_FORMAT[response.basisFormat];\n\n            // HINT: this.imageArray is CompressedTextureResource[]\n            imageResources = new Array<CompressedTextureResource>(imageArray.length) as TranscodedResourcesArray;\n\n            for (let i = 0, j = imageArray.length; i < j; i++)\n            {\n                imageResources[i] = new CompressedTextureResource(null, {\n                    format,\n                    width: imageArray[i].width,\n                    height: imageArray[i].height,\n                    levelBuffers: imageArray[i].levelArray,\n                    levels: imageArray[i].levelArray.length\n                });\n            }\n        }\n        else\n        {\n            // TODO: BufferResource does not support manual mipmapping.\n            imageResources = imageArray.map((image) => new BufferResource(\n                new Uint16Array(image.levelArray[0].levelBuffer.buffer), {\n                    width: image.width,\n                    height: image.height\n                })\n            ) as TranscodedResourcesArray;\n        }\n\n        imageResources.basisFormat = basisFormat;\n\n        return imageResources;\n    }\n\n    /**\n     * Runs transcoding on the main thread.\n     *\n     * @private\n     */\n    private static transcodeSync(arrayBuffer: ArrayBuffer): TranscodedResourcesArray\n    {\n        const BASIS = BasisLoader.basisBinding;\n\n        const data = new Uint8Array(arrayBuffer);\n        const basisFile = new BASIS.BasisFile(data);\n        const imageCount = basisFile.getNumImages();\n        const hasAlpha = basisFile.getHasAlpha();\n\n        const basisFormat = hasAlpha\n            ? BasisLoader.defaultRGBAFormat.basisFormat\n            : BasisLoader.defaultRGBFormat.basisFormat;\n        const basisFallbackFormat = BASIS_FORMATS.cTFRGB565;\n        const imageResources = new Array<CompressedTextureResource | BufferResource>(imageCount);\n\n        let fallbackMode = BasisLoader.fallbackMode;\n\n        if (!basisFile.startTranscoding())\n        {\n            // #if _DEBUG\n            console.error(`Basis failed to start transcoding!`);\n            // #endif\n\n            basisFile.close();\n            basisFile.delete();\n\n            return null;\n        }\n\n        for (let i = 0; i < imageCount; i++)\n        {\n            // Don't transcode all mipmap levels in fallback mode!\n            const levels = !fallbackMode ? basisFile.getNumLevels(i) : 1;\n            const width = basisFile.getImageWidth(i, 0);\n            const height = basisFile.getImageHeight(i, 0);\n            const alignedWidth = (width + 3) & ~3;\n            const alignedHeight = (height + 3) & ~3;\n\n            const imageLevels = new Array<CompressedLevelBuffer>(levels);\n\n            // Transcode mipmap levels into \"imageLevels\"\n            for (let j = 0; j < levels; j++)\n            {\n                const levelWidth = basisFile.getImageWidth(i, j);\n                const levelHeight = basisFile.getImageHeight(i, j);\n                const byteSize = basisFile.getImageTranscodedSizeInBytes(\n                    i, 0, !fallbackMode ? basisFormat : basisFallbackFormat);\n\n                imageLevels[j] = {\n                    levelID: j,\n                    levelBuffer: new Uint8Array(byteSize),\n                    levelWidth,\n                    levelHeight,\n                };\n\n                if (!basisFile.transcodeImage(\n                    imageLevels[j].levelBuffer, i, 0, !fallbackMode ? basisFormat : basisFallbackFormat, false, false))\n                {\n                    if (fallbackMode)\n                    {\n                        // #if _DEBUG\n                        console.error(`Basis failed to transcode image ${i}, level ${0}!`);\n                        // #endif\n                        break;\n                    }\n                    else\n                    {\n                        // Try transcoding to an uncompressed format before giving up!\n                        // NOTE: We must start all over again as all Resources must be in compressed OR uncompressed.\n                        i = -1;\n                        fallbackMode = true;\n\n                        // #if _DEBUG\n                        /* eslint-disable-next-line max-len */\n                        console.warn(`Basis failed to transcode image ${i}, level ${0} to a compressed texture format. Retrying to an uncompressed fallback format!`);\n                        // #endif\n                        continue;\n                    }\n                }\n            }\n\n            let imageResource;\n\n            if (!fallbackMode)\n            {\n                imageResource = new CompressedTextureResource(null, {\n                    format: BASIS_FORMAT_TO_INTERNAL_FORMAT[basisFormat],\n                    width: alignedWidth,\n                    height: alignedHeight,\n                    levelBuffers: imageLevels,\n                    levels\n                });\n            }\n            else\n            {\n                // TODO: BufferResource doesn't support manual mipmap levels\n                imageResource = new BufferResource(\n                    new Uint16Array(imageLevels[0].levelBuffer.buffer), { width, height });\n            }\n\n            imageResources[i] = imageResource;\n        }\n\n        basisFile.close();\n        basisFile.delete();\n\n        const transcodedResources = imageResources as TranscodedResourcesArray;\n\n        transcodedResources.basisFormat = !fallbackMode ? basisFormat : basisFallbackFormat;\n\n        return transcodedResources;\n    }\n\n    /**\n     * Detects the available compressed texture formats on the device.\n     *\n     * @param extensions - extensions provided by a WebGL context\n     * @ignore\n     */\n    static autoDetectFormats(extensions?: Partial<BasisTextureExtensions>): void\n    {\n        // Auto-detect WebGL compressed-texture extensions\n        if (!extensions)\n        {\n            const canvas = document.createElement('canvas');\n            const gl = canvas.getContext('webgl');\n\n            if (!gl)\n            {\n                console.error('WebGL not available for BASIS transcoding. Silently failing.');\n\n                return;\n            }\n\n            extensions = {\n                s3tc: gl.getExtension('WEBGL_compressed_texture_s3tc'),\n                s3tc_sRGB: gl.getExtension('WEBGL_compressed_texture_s3tc_srgb'), /* eslint-disable-line camelcase */\n                etc: gl.getExtension('WEBGL_compressed_texture_etc'),\n                etc1: gl.getExtension('WEBGL_compressed_texture_etc1'),\n                pvrtc: gl.getExtension('WEBGL_compressed_texture_pvrtc')\n                    || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'),\n                atc: gl.getExtension('WEBGL_compressed_texture_atc'),\n                astc: gl.getExtension('WEBGL_compressed_texture_astc')\n            };\n        }\n\n        // Discover the available texture formats\n        const supportedFormats: { [id: string]: INTERNAL_FORMATS } = {};\n\n        for (const key in extensions)\n        {\n            const extension = (extensions as any)[key];\n\n            if (!extension)\n            {\n                continue;\n            }\n\n            Object.assign(supportedFormats, Object.getPrototypeOf(extension));\n        }\n\n        // Set the default alpha/non-alpha output formats for basisu transcoding\n        for (let i = 0; i < 2; i++)\n        {\n            const detectWithAlpha = !!i;\n            let internalFormat: number;\n            let basisFormat: number;\n\n            for (const id in supportedFormats)\n            {\n                internalFormat = supportedFormats[id];\n                basisFormat = INTERNAL_FORMAT_TO_BASIS_FORMAT[internalFormat];\n\n                if (basisFormat !== undefined)\n                {\n                    if ((detectWithAlpha && BASIS_FORMATS_ALPHA[basisFormat])\n                        || (!detectWithAlpha && !BASIS_FORMATS_ALPHA[basisFormat]))\n                    {\n                        break;\n                    }\n                }\n            }\n\n            if (internalFormat)\n            {\n                BasisLoader[detectWithAlpha ? 'defaultRGBAFormat' : 'defaultRGBFormat'] = {\n                    textureFormat: internalFormat,\n                    basisFormat,\n                };\n            }\n            else\n            {\n                BasisLoader[detectWithAlpha ? 'defaultRGBAFormat' : 'defaultRGBFormat'] = {\n                    textureFormat: TYPES.UNSIGNED_SHORT_5_6_5,\n                    basisFormat: BASIS_FORMATS.cTFRGB565\n                };\n\n                BasisLoader.fallbackMode = true;\n            }\n        }\n    }\n\n    /**\n     * Binds the basis_universal transcoder to decompress *.basis files. You must initialize the transcoder library yourself.\n     *\n     * ```js\n     * import { BasisLoader } from '@pixi/basis';\n     * import { Loader } from '@pixi/loaders';\n     *\n     * // window.BASIS() returns a Promise-like object\n     * window.BASIS().then((basisLibrary) =>\n     * {\n     *     // Initialize basis-library; otherwise, transcoded results maybe corrupt!\n     *     basisLibrary.initializeBasis();\n     *\n     *     // Bind BasisLoader to the transcoder\n     *     BasisLoader.bindTranscoder(basisLibrary);\n     * });\n     * ```\n     *\n     * @param basisLibrary - the initialized transcoder library\n     * @private\n     */\n    static bindTranscoder(basisLibrary: BasisBinding): void\n    {\n        BasisLoader.basisBinding = basisLibrary;\n    }\n\n    /**\n     * Loads the transcoder source code for use in {@link PIXI.BasisLoader.TranscoderWorker}.\n     *\n     * @private\n     * @param jsURL - URL to the javascript basis transcoder\n     * @param wasmURL - URL to the wasm basis transcoder\n     */\n    static loadTranscoder(jsURL: string, wasmURL: string): Promise<[void, void]>\n    {\n        return BasisLoader.TranscoderWorker.loadTranscoder(jsURL, wasmURL);\n    }\n\n    /**\n     * Set the transcoder source code directly\n     *\n     * @private\n     * @param jsSource - source for the javascript basis transcoder\n     * @param wasmSource - source for the wasm basis transcoder\n     */\n    static setTranscoder(jsSource: string, wasmSource: ArrayBuffer): void\n    {\n        BasisLoader.TranscoderWorker.setTranscoder(jsSource, wasmSource);\n    }\n\n    static TranscoderWorker: typeof TranscoderWorker = TranscoderWorker;\n\n    static get TRANSCODER_WORKER_POOL_LIMIT(): number\n    {\n        return this.workerPool.length || 1;\n    }\n\n    static set TRANSCODER_WORKER_POOL_LIMIT(limit: number)\n    {\n        // TODO: Destroy workers?\n        for (let i = this.workerPool.length; i < limit; i++)\n        {\n            this.workerPool[i] = new TranscoderWorker();\n            this.workerPool[i].initAsync();\n        }\n    }\n}\n\n// Auto-detect compressed texture formats once @pixi/basis is imported!\nBasisLoader.autoDetectFormats();\n","import { Loader } from '@pixi/loaders';\nimport { BasisLoader } from './BasisLoader';\n\nexport * from './Basis';\nexport * from './BasisLoader';\n\n// parse any BASIS supercompressed files into textures\nLoader.registerPlugin(BasisLoader);\n"],"names":["arguments","BASIS_FORMATS","INTERNAL_FORMATS","TYPES","Runner","LoaderResource","FORMATS","Texture","BaseTexture","CompressedTextureResource","MIPMAP_MODES","ALPHA_MODES","BufferResource","Loader"],"mappings":"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"}