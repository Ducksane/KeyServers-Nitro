/*!
 * @pixi/math-extras - v6.3.0
 * Compiled Wed, 23 Mar 2022 18:58:56 UTC
 *
 * @pixi/math-extras is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var math=require("@pixi/math"),mixins={add:function(t,i){return i||(i=new math.Point),i.x=this.x+t.x,i.y=this.y+t.y,i},subtract:function(t,i){return i||(i=new math.Point),i.x=this.x-t.x,i.y=this.y-t.y,i},multiply:function(t,i){return i||(i=new math.Point),i.x=this.x*t.x,i.y=this.y*t.y,i},multiplyScalar:function(t,i){return i||(i=new math.Point),i.x=this.x*t,i.y=this.y*t,i},dot:function(t){return this.x*t.x+this.y*t.y},cross:function(t){return this.x*t.y-this.y*t.x},normalize:function(t){t||(t=new math.Point);var i=Math.sqrt(this.x*this.x+this.y*this.y);return t.x=this.x/i,t.y=this.y/i,t},magnitude:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},magnitudeSquared:function(){return this.x*this.x+this.y*this.y},project:function(t,i){i||(i=new math.Point);var n=(this.x*t.x+this.y*t.y)/(t.x*t.x+t.y*t.y);return i.x=t.x*n,i.y=t.y*n,i},reflect:function(t,i){i||(i=new math.Point);var n=this.x*t.x+this.y*t.y;return i.x=this.x-2*n*t.x,i.y=this.y-2*n*t.y,i}};function floatEqual(t,i,n){return void 0===n&&(n=Number.EPSILON),t===i||Math.abs(t-i)<n}function genericLineIntersection(t,i,n,e,h,r){r||(r=new math.Point);var s=i.x-t.x,o=i.y-t.y,x=e.x-n.x,y=e.y-n.y,a=y*s-x*o;if(floatEqual(a,0))return r.x=NaN,r.y=NaN,r;var u=(x*(t.y-n.y)-y*(t.x-n.x))/a,c=(s*(t.y-n.y)-o*(t.x-n.x))/a;return!h&&(u<0||u>1||c<0||c>1)?(r.x=NaN,r.y=NaN,r):(r.x=t.x+u*s,r.y=n.y+c*y,r)}function lineIntersection(t,i,n,e,h){return genericLineIntersection(t,i,n,e,!0,h)}function segmentIntersection(t,i,n,e,h){return genericLineIntersection(t,i,n,e,!1,h)}Object.assign(math.Point.prototype,mixins),Object.assign(math.ObservablePoint.prototype,mixins),math.Rectangle.prototype.containsRect=function(t){return t.width<=0||t.height<=0?t.x>this.x&&t.y>this.y&&t.right<this.right&&t.bottom<this.bottom:t.x>=this.x&&t.y>=this.y&&t.right<=this.right&&t.bottom<=this.bottom},math.Rectangle.prototype.equals=function(t){return t===this||t&&this.x===t.x&&this.y===t.y&&this.width===t.width&&this.height===t.height},math.Rectangle.prototype.intersection=function(t,i){i||(i=new math.Rectangle);var n=this.x<t.x?t.x:this.x,e=this.right>t.right?t.right:this.right;if(e<=n)return i.x=i.y=i.width=i.height=0,i;var h=this.y<t.y?t.y:this.y,r=this.bottom>t.bottom?t.bottom:this.bottom;return r<=h?(i.x=i.y=i.width=i.height=0,i):(i.x=n,i.y=h,i.width=e-n,i.height=r-h,i)},math.Rectangle.prototype.union=function(t,i){i||(i=new math.Rectangle);var n=Math.min(this.x,t.x),e=Math.max(this.x+this.width,t.x+t.width),h=Math.min(this.y,t.y),r=Math.max(this.y+this.height,t.y+t.height);return i.x=n,i.y=h,i.width=e-n,i.height=r-h,i},exports.floatEqual=floatEqual,exports.lineIntersection=lineIntersection,exports.segmentIntersection=segmentIntersection;
//# sourceMappingURL=math-extras.min.js.map
